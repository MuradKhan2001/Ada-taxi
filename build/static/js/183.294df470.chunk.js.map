{"version":3,"file":"static/js/183.294df470.chunk.js","mappings":"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","sources":["components/notFound/NotFound.jsx","components/header/Header.jsx","components/order/Order.jsx","components/dashboard/Dashboard.jsx","components/dashboard/googleMapsApi.js","components/profile/Profile.jsx","components/edit-profile/EditProfile.jsx","routes/Routes.jsx","components/modal/Modal.jsx","components/modal/useOnKeyPress.js","components/alerts/Alerts.jsx","components/get-location/GetLocation.jsx","components/get-location/googleMapsApi.js","components/app/App.js"],"sourcesContent":["import \"./not-found.scss\";\nimport {useTranslation} from \"react-i18next\";\n\nconst NotFound = () => {\n    const {t} = useTranslation();\n\n    return <div className=\"not-found-wrapper\">\n        <div className=\"sloy\">\n            <div className=\"text1\">\n                <div className=\"error\">\n                    error 404\n                </div>\n                <div className=\"text\">\n                    {t(\"page-not-found\")}\n                </div>\n            </div>\n        </div>\n    </div>\n};\n\nexport default NotFound","import Dropdown from 'react-bootstrap/Dropdown';\nimport \"./header-style.scss\"\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst Header = () => {\n    const baseUrl = useSelector((store) => store.baseUrl.data)\n    const navigate = useNavigate();\n    const {t} = useTranslation();\n    const dispatch = useDispatch();\n    const [client, setClient] = useState({});\n\n    const language = [\n        {\n            code: \"uz\",\n            name: \"O'zbek tili\",\n            country_code: \"uz\",\n        },\n        {\n            code: \"en\",\n            name: \"English language\",\n            country_code: \"en\",\n        },\n        {\n            code: \"ru\",\n            name: \"Pусский язык\",\n            country_code: \"ru\",\n        },\n    ];\n    const changeLanguage = (code) => {\n        localStorage.setItem(\"lng\", code);\n        i18next.changeLanguage(code);\n    };\n    const showModalContent = (status) => {\n        dispatch(showModals({show: true, status: status}));\n    };\n\n    useEffect(() => {\n        if (localStorage.getItem(\"token\")) {\n            axios.get(`${baseUrl}/api/v1/client/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setClient(response.data);\n            }).catch((error) => {\n                if (error.response.status == 401) {\n                    localStorage.removeItem(\"token\");\n                    localStorage.removeItem(\"userId\");\n                    showModalContent(\"log-in\")\n                }\n            });\n        }\n    }, []);\n\n    return (\n        <div className=\"header-wrapper\">\n            <img onClick={() => navigate(\"/\")} className=\"logo\" src=\"./images/logo.webp\" alt=\"ada-taxi-logo\"\n                 loading=\"lazy\"/>\n            <div className=\"center-box\">\n                <b onClick={() => {\n                    showModalContent(\"orders\")\n                    navigate(\"/\")\n                }}>\n                    {t(\"my_orders\")}\n                </b>\n                <b onClick={() => showModalContent(\"about-app\")}>\n                    {t(\"app_links\")}\n                </b>\n\n                <b onClick={() => showModalContent(\"download-app\")}>\n                    {t(\"download_app\")}\n                </b>\n            </div>\n            <div className=\"header-buttons\">\n                <div className=\"language-btn\">\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            <img className=\"globe\" src=\"./images/globe-alt.webp\" alt=\"language\" loading=\"lazy\"/>\n                            <div className=\"name\">\n                                {language.map((item, index) => {\n                                    return (\n                                        <div key={index}>\n                                            {i18next.language === item.code ? item.name : \"\"}\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n\n                            {language.map(({code, name, country_code}) => (\n                                <Dropdown.Item key={country_code}\n                                               onClick={() => changeLanguage(code)}>{name}</Dropdown.Item>\n                            ))}\n\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                {!localStorage.getItem(\"token\") &&\n                    <div onClick={() => showModalContent(\"log-in\")} className=\"sign-in-btn\">\n                        <img src=\"./images/logout.webp\" alt=\"sign-in\" loading=\"lazy\"/>\n                        {t(\"login\")}\n                    </div>}\n                {localStorage.getItem(\"token\") && <div className=\"profile-client\">\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            <div className=\"image-person\">\n                                <img\n                                    src={client.profile_image || \"./images/user.webp\"}\n                                    alt=\"photo\"\n                                    loading=\"lazy\"\n                                />\n                            </div>\n\n                            <div className=\"info-person\">\n                                <div className=\"name\">{client.first_name}&ensp;{client.last_name}</div>\n                                <div className=\"phone\">{client.phone}</div>\n                            </div>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item onClick={() => navigate(\"/profile\")}>\n                                <img src=\"./images/setting.webp\" alt=\"settings\" loading=\"lazy\"/>\n                                {t(\"settings\")}\n                            </Dropdown.Item>\n\n                            <Dropdown.Item onClick={() => showModalContent(\"about-app\")}>\n                                <img src=\"./images/information.webp\" alt=\"settings\" loading=\"lazy\"/>\n                                {t(\"app_links\")}\n                            </Dropdown.Item>\n\n                            <Dropdown.Item onClick={() => showModalContent(\"log-out\")}>\n                                <img src=\"./images/log-out.webp\" alt=\"settings\" loading=\"lazy\"/>\n                                {t(\"logOut\")}\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>}\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React, {useEffect, useState, useContext} from 'react';\nimport \"./style-order.scss\";\nimport ReactStars from \"react-stars\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useTranslation} from \"react-i18next\";\nimport {addLocations, delLocations, clearPickUpLocations} from \"../../redux/PickUpLocations\";\nimport {addLocationsDrop, delLocationsDrop, clearDropOffLocations} from \"../../redux/DropOffLocations\";\nimport {AddClientInfo} from \"../../redux/AddClient\";\nimport axios from \"axios\";\nimport {webSockedContext} from \"../app/App\";\nimport i18next from \"i18next\";\nimport {ShowHideModal} from \"../../redux/GetLocations\";\nimport {getOrder} from \"../../redux/ActiveOrders\";\nimport {setPageNumber} from \"../../redux/OrderPage\";\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\nimport success from \"../app/sound/success.wav\";\nimport success2 from \"../app/sound/success2.wav\";\n\nconst Order = () => {\n    let webSocked = useContext(webSockedContext);\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data)\n    const orderPage = useSelector((store) => store.OrderPage.data)\n    const active_order = useSelector((store) => store.ActiveOrders.data)\n    const [progress, setProgress] = useState(0);\n    const dispatch = useDispatch();\n    const PickUpLocations = useSelector((store) => store.PickUpLocations.data)\n    const DropOffLocations = useSelector((store) => store.DropOffLocations.data)\n    const PaymentType = useSelector((store) => store.PaymentType.data)\n    const OtherClients = useSelector((store) => store.AddClient.data)\n    const [client_count, setClient_count] = useState(1);\n    const [raidCount, setRaidCount] = useState(0);\n    const [showRete, setShowRete] = useState(true);\n    const [dots, setDots] = useState(\"\");\n\n    const direction = [\n        {id: \"regional\", name: t(\"direction1\")},\n        {id: \"postal\", name: t(\"direction2\")},\n        {id: \"minivan\", name: t(\"direction3\")},\n        {id: \"travel\", name: t(\"direction4\")},\n    ];\n\n    const [active_direction, setActive_direction] = useState(\"regional\")\n\n    const [price_list, setPrice_list] = useState([]);\n    const [active_price, setActive_price] = useState(\"\");\n\n    const [comment_driver, setComment_driver] = useState(\"\");\n\n    const [services, setServices] = useState([]);\n    const [active_service, setActive_service] = useState([]);\n    const [all_seats, setAllSeats] = useState(false);\n\n    const [pick_up_date, setPick_up_date] = useState(\"\");\n    const [pick_up_time, setPick_up_time] = useState(\"\");\n\n    const [sender_phone, setsender_phone] = useState(\"\");\n    const [receiver_phone, setReceiverPhone] = useState(\"\");\n    const [payer, setPayer] = useState(\"sender\");\n\n    useEffect(() => {\n        if (localStorage.getItem(\"token\")) {\n\n            axios.get(`${baseUrl}/api/v1/extra-services/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setServices(response.data);\n            })\n        }\n        getPrice()\n        getActiveOrders()\n    }, []);\n\n    useEffect(() => {\n        getData()\n    }, [PickUpLocations, DropOffLocations, active_service, all_seats, client_count, active_direction]);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setDots((prev) => (prev.length < 3 ? prev + \".\" : \"\"));\n        }, 500);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        if (localStorage.getItem(\"token\")) {\n            webSocked.onmessage = (event) => {\n                const data = JSON.parse(event.data);\n\n                if (data.action) {\n                    if (data.action === \"order_finished\") {\n                        setComment_driver(\"\")\n                        setPick_up_date(\"\")\n                        setPick_up_time(\"\")\n                        setAllSeats(false)\n                        setsender_phone(\"\")\n                        setReceiverPhone(\"\")\n                        setPayer(\"sender\")\n                        setActive_service([])\n                        setRaidCount(0)\n                    }\n\n                    if (data.action === \"reject_order\") {\n                        setComment_driver(\"\")\n                        setPick_up_date(\"\")\n                        setPick_up_time(\"\")\n                        setAllSeats(false)\n                        setsender_phone(\"\")\n                        setReceiverPhone(\"\")\n                        setPayer(\"sender\")\n                        setActive_service([])\n                        setRaidCount(0)\n                    }\n                }\n            };\n        }\n    }, [webSocked])\n\n    function successAudio() {\n        new Audio(success).play()\n    }\n\n    function successOrder() {\n        new Audio(success2).play()\n    }\n\n    const getActiveOrders = () => {\n        if (localStorage.getItem(\"token\")) {\n            axios.get(`${baseUrl}/api/v1/client-active-orders/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                dispatch(getOrder(response.data[0]));\n                if (response.data.length > 0) {\n                    if (response.data[0].driver) {\n                        if (response.data[0].status === \"started\") {\n                            dispatch(setPageNumber(5))\n\n                            if (response.data[0].rated) {\n                                setShowRete(false);\n                            }\n                        } else dispatch(setPageNumber(4))\n                    } else {\n                        dispatch(setPageNumber(3))\n                    }\n                }\n            })\n        }\n    }\n\n    const showModalContent = (status, id) => {\n        dispatch(showModals({show: true, status: status, id}));\n    };\n\n    const addLocation = (location) => {\n        if (location === \"from\" && PickUpLocations.length < 10) {\n            let newLocation = {\n                address: \"\",\n                latitude: null,\n                longitude: null,\n                number: PickUpLocations.length + 1\n            }\n            dispatch(addLocations(newLocation));\n        }\n\n        if (location === \"to\" && DropOffLocations.length < 10) {\n            let newLocation = {\n                address: \"\",\n                latitude: null,\n                longitude: null,\n                number: DropOffLocations.length + 1\n            }\n            dispatch(addLocationsDrop(newLocation));\n        }\n    }\n    const delLocation = (location, indexToDelete) => {\n        if (location === \"from\") {\n            dispatch(delLocations(indexToDelete));\n        }\n\n        if (location === \"to\") {\n            dispatch(delLocationsDrop(indexToDelete));\n        }\n    }\n\n    const delClient = () => {\n        let client = {\n            name: \"\",\n            phone: \"\"\n        }\n        dispatch(AddClientInfo(client))\n    }\n\n    const toggleService = (id) => {\n        if (active_service.includes(id)) {\n            setActive_service(active_service.filter((item) => item !== id));\n        } else {\n            setActive_service([...active_service, id]);\n        }\n    };\n\n    const getPrice = () => {\n        let price_info = {\n            service: active_direction,\n            from_region: {\n                \"latitude\": 41.309484,\n                \"longitude\": 69.251330\n            },\n            to_region: {\n                \"latitude\": 40.764860,\n                \"longitude\": 72.309999\n            },\n            passanger_count: client_count,\n            book_all_seats: all_seats,\n            extra_services: active_service\n        }\n\n        axios.get(`https://api.adataxi.uz/api/v1/get-prices/`, price_info).then((response) => {\n            setPrice_list(response.data);\n        })\n    }\n\n    const getLocations = (location_num = \"\", location_status = \"\") => {\n        dispatch(ShowHideModal({show: true, location_num, location_status}));\n    }\n\n    const getData = () => {\n\n        let data = {\n            service: active_direction,\n            from_region: PickUpLocations[0].latitude !== null ? PickUpLocations[0] : {},\n            to_region: DropOffLocations[0].latitude !== null ? DropOffLocations[0] : {},\n            passanger_count: client_count,\n            book_all_seats: all_seats,\n            extra_services: active_service\n        }\n\n        if ((PickUpLocations[0].latitude !== null) === (DropOffLocations[0].latitude !== null)) {\n            axios.post(`https://api.adataxi.uz/api/v1/get-prices/`, data).then((response) => {\n                setPrice_list(response.data)\n            })\n        }\n\n    }\n\n    const SendOrder = () => {\n        let allInfo = {\n            car_service: active_direction,\n            car_category: active_price,\n            passanger_count: client_count,\n            payment_type: PaymentType.payment_type,\n            pick_up_date: `${pick_up_date}T${pick_up_time}Z`,\n            end_date: null,\n            book_all_seats: all_seats,\n            comment_to_driver: comment_driver,\n            sender_phone,\n            receiver_phone,\n            payer,\n            extra_services: active_service,\n            pick_up_locations: PickUpLocations,\n            drop_off_locations: DropOffLocations\n        }\n\n        if (pick_up_date && pick_up_time) {\n            axios.post(`${baseUrl}/api/v1/order-create/`, allInfo, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                dispatch(getOrder([response.data]))\n                getActiveOrders()\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert, text: t(\"confirm\"), img: \"./images/green.svg\", color: \"#EDFFFA\"\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n                dispatch(clearPickUpLocations())\n                dispatch(clearDropOffLocations())\n                successOrder()\n            })\n        } else {\n            let idAlertError = Date.now();\n            let alert = {\n                id: idAlertError,\n                text: t(\"confirm_form\"),\n                img: \"./images/red.svg\",\n                color: \"#FFEDF1\",\n            };\n            dispatch(addAlert(alert));\n            setTimeout(() => {\n                dispatch(delAlert(idAlertError));\n            }, 5000);\n        }\n\n    };\n\n    const rateDriver = () => {\n        let data = {\n            order: active_order.id,\n            rate: raidCount\n        }\n        if (showRete) {\n            axios.post(`${baseUrl}/api/v1/order-review/`, data, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert, text: t(\"driver_rate\"), img: \"./images/green.svg\", color: \"#EDFFFA\"\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n                successAudio()\n            })\n        }\n    }\n\n    return (\n        <div className=\"order-wrapper\">\n            {orderPage === 0 && <div className=\"order-box\">\n                <div className=\"location-box\">\n                    <div className=\"bg-location\">\n                        {PickUpLocations.map((item, index) => {\n                            return <div key={index} className=\"location-from\">\n                                <div className=\"circle-warpper\">\n                                    <div className=\"circle\"></div>\n                                </div>\n                                <div className=\"location-text\">\n                                    <div className={`location-name`}>\n                                        {item.address ? item.address : <div className=\"placeholder-address\">\n                                            {t(\"pick_up\")}\n                                        </div>}\n                                    </div>\n\n                                    <div onClick={() => getLocations(index, \"pick_up\")}\n                                         className=\"loc-icon\">\n                                        <img src=\"./images/add-pin.png\" alt=\"add\" loading=\"lazy\"/>\n                                    </div>\n\n                                    {PickUpLocations.length < 10 && index === 0 &&\n                                        < div onClick={() => addLocation(\"from\")} className=\"add-icon\">\n                                            <img src=\"./images/plus.webp\" alt=\"add\" loading=\"lazy\"/>\n                                        </div>}\n\n                                    {index > 0 && <div className=\"del-icon\">\n                                        <img onClick={() => delLocation(\"from\", item.number)} src=\"./images/trash.webp\"\n                                             alt=\"add\" loading=\"lazy\"/>\n                                    </div>}\n                                </div>\n                            </div>\n                        })}\n                        {DropOffLocations.map((item, index) => {\n                            return <div key={index} className=\"location-to\">\n                                <div className=\"circle-warpper\">\n                                    <div className=\"circle\"></div>\n                                </div>\n                                <div className=\"location-text\">\n                                    <div className={`location-name`}>\n                                        {item.address ? item.address : <div className=\"placeholder-address\">\n                                            {t(\"drop\")}\n                                        </div>}\n                                    </div>\n\n                                    <div onClick={() => getLocations(index, \"drop_off\")}\n                                         className=\"loc-icon\">\n                                        <img src=\"./images/add-pin.png\" alt=\"add\" loading=\"lazy\"/>\n                                    </div>\n\n                                    {DropOffLocations.length < 10 && index === 0 &&\n                                        < div onClick={() => addLocation(\"to\")} className=\"add-icon\">\n                                            <img src=\"./images/plus.webp\" alt=\"add\" loading=\"lazy\"/>\n                                        </div>}\n\n                                    {index > 0 && <div className=\"del-icon\">\n                                        <img onClick={() => delLocation(\"to\", item.number)} src=\"./images/trash.webp\"\n                                             alt=\"add\" loading=\"lazy\"/>\n                                    </div>}\n                                </div>\n                            </div>\n                        })}\n                    </div>\n                </div>\n                <div className=\"tarif-box\">\n                    {direction.map((item, index) => {\n                        return <div key={index} onClick={() => setActive_direction(item.id)}\n                                    className={`tarif ${item.id === active_direction && \"active\"}`}>\n                            {item.name}\n                        </div>\n                    })}\n                </div>\n                <div className=\"tarif-price\">\n                    {price_list.map((item, index) => {\n                        return <div onClick={() => setActive_price(item.category && item.category.id)} key={index}>\n                            <div\n                                className={`tarif-card ${item.category && item.category.id === active_price && \"active\"}`}>\n                                <img src={item.category && item.category.icon} alt=\"car\" loading=\"lazy\"/>\n                                <div\n                                    className=\"name\">{item.category && item.category.translations[i18next.language].name}</div>\n                                <div className=\"price\">{item.cost} {t(\"sum\")}</div>\n                            </div>\n                        </div>\n                    })}\n                </div>\n                <div className=\"funtion\">\n                    <div className=\"left\">\n                        <img src=\"./images/sms2.webp\" alt=\"sms\" loading=\"lazy\"/>\n                        <input onChange={(e) => setComment_driver(e.target.value)}\n                               value={comment_driver} placeholder={t(\"comment_driver\")} type=\"text\"/>\n                    </div>\n                </div>\n                <div onClick={() => showModalContent(\"payment-type\")} className=\"payment\">\n                    <div className=\"left\">\n                        <img src=\"./images/payment.webp\" alt=\"sms\" loading=\"lazy\"/>\n                        {t(\"payment_type\")}\n                    </div>\n                    <div className=\"right\">\n                        {PaymentType.payment_type === \"cash\" ? t(\"cash\") : t(\"card\")}\n                        <img src=\"./images/more.webp\" alt=\"more\" loading=\"lazy\"/>\n                    </div>\n                </div>\n\n                {active_direction !== \"postal\" && OtherClients.name && OtherClients.phone ? <div className=\"other\">\n                    <div className=\"left\">\n                        <img src=\"./images/user-1.webp\" alt=\"sms\" loading=\"lazy\"/>\n                        <div className=\"info\">\n                            <div className=\"name\">\n                                {OtherClients.name}\n                            </div>\n                            <div className=\"phone\">\n                                {OtherClients.phone}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"right\">\n                        <img onClick={delClient} src=\"./images/trash.webp\" alt=\"more\"\n                             loading=\"lazy\"/>\n                    </div>\n                </div> : active_direction !== \"postal\" &&\n                    <div onClick={() => showModalContent(\"add-other\")} className=\"funtion\">\n                        <div className=\"left\">\n                            <img src=\"./images/user-1.webp\" alt=\"sms\" loading=\"lazy\"/>\n                            {t(\"other_order\")}\n                        </div>\n                        <img src=\"./images/more.webp\" alt=\"more\" loading=\"lazy\"/>\n                    </div>}\n                <div className=\"services\">\n                    {active_direction !== \"postal\" && services.map((item, index) => {\n                        const isActive = active_service.includes(item.id);\n                        if (item.is_main) {\n                            return <div key={index} className=\"service\">\n                                <div className=\"left\">\n                                    <div className=\"text\">\n                                        <div className=\"name\">\n                                            {item.translations[i18next.language].name}\n                                        </div>\n                                        <div className=\"price-service\">\n                                            To‘lov {item.price} {t(\"sum\")}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className={`on-of ${isActive ? \"active-icon\" : \"\"}`}\n                                     onClick={() => toggleService(item.id)}>\n                                    <div className={`on-icon ${isActive ? \"active\" : \"\"}`}></div>\n                                </div>\n                            </div>\n                        }\n                    })}\n\n                    {active_direction !== \"postal\" &&\n                        <div onClick={() => dispatch(setPageNumber(1))} className=\"service cursor\">\n                            <div className=\"left\">\n                                <img src=\"./images/filter.webp\" alt=\"sms\" loading=\"lazy\"/>\n                                {t(\"plus_service\")}\n                            </div>\n                            <img src=\"./images/more.webp\" alt=\"more\" loading=\"lazy\"/>\n                        </div>}\n                </div>\n            </div>}\n            {orderPage === 0 && <div onClick={() => {\n                if (PickUpLocations[0].latitude !== null && DropOffLocations[0].latitude !== null && active_price) {\n                    if (active_direction !== \"postal\") {\n                        dispatch(setPageNumber(6))\n                    } else dispatch(setPageNumber(7))\n                } else {\n                    let idAlertError = Date.now();\n                    let alert = {\n                        id: idAlertError,\n                        text: t(\"tariff_location\"),\n                        img: \"./images/red.svg\",\n                        color: \"#FFEDF1\",\n                    };\n                    dispatch(addAlert(alert));\n                    setTimeout(() => {\n                        dispatch(delAlert(idAlertError));\n                    }, 5000);\n                }\n            }} className=\"button-box\">\n                <div className=\"button\">\n                    {t(\"next\")}\n                </div>\n            </div>}\n\n            {orderPage === 1 && <div className=\"services-box\">\n                <div className=\"header\">\n                    <img onClick={() => dispatch(setPageNumber(0))} src=\"./images/prev.png\" alt=\"prev\" loading=\"lazy\"/>\n                    <div className=\"title\">\n                        {t(\"plus_service\")}\n                    </div>\n                </div>\n                {services.map((item, index) => {\n                    const isActive = active_service.includes(item.id);\n                    if (!item.is_main) {\n                        return <div key={index} className=\"service\">\n                            <div className=\"left\">\n                                <div className=\"text\">\n                                    <div className=\"name\">\n                                        {item.translations[i18next.language].name}\n                                    </div>\n                                    <div className=\"price-service\">\n                                        {t(\"payment\")} {item.price} {t(\"sum\")}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={`on-of ${isActive ? \"active-icon\" : \"\"}`}\n                                 onClick={() => toggleService(item.id)}>\n                                <div className={`on-icon ${isActive ? \"active\" : \"\"}`}></div>\n                            </div>\n                        </div>\n                    }\n                })}\n            </div>}\n\n            {orderPage === 3 && <div className=\"search-driver\">\n                <div className=\"header\">\n                    <div className=\"title\">\n                        {t(\"search_driver\")}\n                    </div>\n                    <span>{dots}</span>\n                </div>\n                <div className=\"loading\">\n                    <span className=\"loader\"></span>\n                </div>\n                <div className=\"location-box\">\n                    <div className=\"location-from\">\n                        <div className=\"circle-warpper\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"location-text\">\n                            {active_order.pick_up_locations && active_order.pick_up_locations.map((item, index) => {\n                                return <span key={index}>\n                                    {item.address}\n                                </span>\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"line\"></div>\n                    <div className=\"location-to\">\n                        <div className=\"circle-warpper\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"location-text\">\n                            {active_order.drop_off_locations && active_order.drop_off_locations.map((item, index) => {\n                                return <span key={index}>\n                                    {item.address}\n                                </span>\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"info-box\">\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"direction\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.car_service && active_order.car_service.translations[i18next.language].name}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"tarif\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.car_category && active_order.car_category.translations[i18next.language].name}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"payment_type\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.payment_type === \"cash\" ? t(\"cash\") : t(\"card\")}\n                        </div>\n                    </div>\n\n                    {active_order.car_service && active_order.car_service.translations[\"en\"].name === \"Postal\" && <>\n                        <div className=\"information\">\n                            <div className=\"label\">\n                                {t(\"sender\")}\n                            </div>\n                            <div className=\"val\">\n                                {active_order.sender_phone}\n                            </div>\n                        </div>\n                        <div className=\"information\">\n                            <div className=\"label\">\n                                {t(\"person2\")}\n                            </div>\n                            <div className=\"val\">\n                                {active_order.receiver_phone}\n                            </div>\n                        </div>\n                        <div className=\"information\">\n                            <div className=\"label\">\n                                {t(\"pay_who\")}\n                            </div>\n                            <div className=\"val\">\n                                {active_order.payer === \"sender\" ? t(\"sender\") : t(\"person2\")}\n                            </div>\n                        </div>\n                    </>}\n\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"order_id\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.id}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"date_time\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.pick_up_date}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"price-order\">\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"passangers_count\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.passanger_count}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"price\")}\n                        </div>\n                        <div className=\"val-price\">\n                            {active_order.price} {t(\"sum\")}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"buttons\">\n                    <div onClick={() => showModalContent(\"cancel-order\", active_order.id)} className=\"cancel-btn\">\n                        <img src=\"./images/x.webp\" alt=\"cancel\" loading=\"lazy\"/>\n                        {t(\"cancel_order\")}\n                    </div>\n                    {/*<div className=\"line\"></div>*/}\n                    {/*<div className=\"share-btn\">*/}\n                    {/*    <img src=\"./images/share.webp\" alt=\"cancel\" loading=\"lazy\"/>*/}\n                    {/*    Ulashish*/}\n                    {/*</div>*/}\n                </div>\n            </div>}\n\n            {orderPage === 4 && <div className=\"get-driver\">\n                {/*<div className=\"header\">*/}\n                {/*    Haydovchi ~10 daqiqada keladi*/}\n                {/*</div>*/}\n                <div className=\"header-content\">\n                    <div className=\"car-info\">\n                        <div className=\"name-car\">\n                            {active_order.driver.car_color.translations[i18next.language].name}\n                            &ensp;\n                            {active_order.driver.car_make.translations[i18next.language].name}\n                            &ensp;\n                            {active_order.driver.car_model.translations[i18next.language].name}\n                        </div>\n                        <div className=\"car-number\">\n                            <div className=\"num\">{active_order.driver.car_number.slice(0, 2)}</div>\n                            <div className=\"line\"></div>\n                            <div className=\"num\">{active_order.driver.car_number.slice(2)}</div>\n                        </div>\n                    </div>\n                    <div className=\"car-img\">\n                        <img src={active_order.car_category.icon} alt=\"car\" loading=\"lazy\"/>\n                    </div>\n                </div>\n                <div className=\"driver-info\">\n                    <div className=\"person-img\">\n                        <img src={active_order.driver.profile_image} alt=\"\"/>\n                    </div>\n                    <div className=\"info\">\n                        <div className=\"name\">\n                            {active_order.driver.first_name}\n                            &ensp;\n                            {active_order.driver.last_name}\n                        </div>\n                        <div className=\"information\">\n                            <div className=\"rate\">\n                                <div className=\"label\">{t(\"rate\")}</div>\n                                <div className=\"info\">\n                                    <img src=\"./images/star.webp\" alt=\"star\" loading=\"lazy\"/>\n                                    {active_order.driver.rate}\n                                </div>\n                            </div>\n                            <div className=\"line\"></div>\n                            <div className=\"count\">\n                                <div className=\"label\">{t(\"orders_finishet\")}</div>\n                                <div className=\"info\">\n                                    {active_order.driver.finished_orders_count}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"button-call\">\n                    <div className=\"call-driver\">\n                        <img src=\"./images/phone.png\" alt=\"phone\" loading=\"lazy\"/>\n                        <a href={`tel:${active_order.driver.phone}`}> {active_order.driver.phone}</a>\n                    </div>\n                </div>\n                <div className=\"location-box\">\n                    <div className=\"location-from\">\n                        <div className=\"location-text\">\n                            {active_order.pick_up_locations.map((item_loc, index_loc) => {\n                                return <div key={index_loc} className=\"location-from\">\n                                    <div className=\"circle-warpper\">\n                                        <div className=\"circle\"></div>\n                                    </div>\n                                    <div className=\"location-text\">\n                                        {item_loc.address}\n                                    </div>\n                                </div>\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"line\"></div>\n                    <div className=\"location-to\">\n                        <div className=\"location-text\">\n                            {active_order.drop_off_locations.map((item_loc, index_loc) => {\n                                return <div key={index_loc} className=\"location-to\">\n                                    <div className=\"circle-warpper\">\n                                        <div className=\"circle\"></div>\n                                    </div>\n                                    <div className=\"location-text\">\n                                        {item_loc.address}\n                                    </div>\n                                </div>\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"info-box\">\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"direction\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.car_service && active_order.car_service.translations[i18next.language].name}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"tarif\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.car_category && active_order.car_category.translations[i18next.language].name}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"payment_type\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.payment_type === \"cash\" ? t(\"cash\") : t(\"card\")}\n                        </div>\n                    </div>\n\n                    {active_order.car_service && active_order.car_service.translations[\"en\"].name === \"Postal\" && <>\n                        <div className=\"information\">\n                            <div className=\"label\">\n                                {t(\"sender\")}\n                            </div>\n                            <div className=\"val\">\n                                {active_order.sender_phone}\n                            </div>\n                        </div>\n                        <div className=\"information\">\n                            <div className=\"label\">\n                                {t(\"person2\")}\n                            </div>\n                            <div className=\"val\">\n                                {active_order.receiver_phone}\n                            </div>\n                        </div>\n                        <div className=\"information\">\n                            <div className=\"label\">\n                                {t(\"pay_who\")}\n                            </div>\n                            <div className=\"val\">\n                                {active_order.payer === \"sender\" ? t(\"sender\") : t(\"person2\")}\n                            </div>\n                        </div>\n                    </>}\n\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"order_id\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.id}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"date_time\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.pick_up_date}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"price-order\">\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"passangers_count\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.passanger_count} kishi\n                        </div>\n                    </div>\n\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"price\")}\n                        </div>\n                        <div className=\"val-price\">\n                            {active_order.price} {t(\"sum\")}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"buttons\">\n                    <div onClick={() => showModalContent(\"cancel-order\", active_order.id)} className=\"cancel-btn\">\n                        <img src=\"./images/x.webp\" alt=\"cancel\" loading=\"lazy\"/>\n                        {t(\"cancel_order\")}\n                    </div>\n                </div>\n            </div>}\n\n            {orderPage === 5 && <div className=\"rate-driver\">\n                {/*<div className=\"header\">*/}\n                {/*    ~5 soatda yetib boramiz*/}\n                {/*</div>*/}\n                <div className=\"header-content\">\n                    <div className=\"car-info\">\n                        <div className=\"name-car\">\n                            {active_order.driver.car_color.translations[i18next.language].name}\n                            &ensp;\n                            {active_order.driver.car_make.translations[i18next.language].name}\n                            &ensp;\n                            {active_order.driver.car_model.translations[i18next.language].name}\n                        </div>\n                        <div className=\"car-number\">\n                            <div className=\"num\">{active_order.driver.car_number.slice(0, 2)}</div>\n                            <div className=\"line\"></div>\n                            <div className=\"num\">{active_order.driver.car_number.slice(2)}</div>\n                        </div>\n                    </div>\n                    <div className=\"car-img\">\n                        <img src={active_order.car_category.icon} alt=\"car\" loading=\"lazy\"/>\n                    </div>\n                </div>\n                <div className=\"driver-info\">\n                    <div className=\"person-img\">\n                        <img src={active_order.driver.profile_image} alt=\"\"/>\n                    </div>\n                    <div className=\"info\">\n                        <div className=\"name\">\n                            {active_order.driver.first_name}\n                            &ensp;\n                            {active_order.driver.last_name}\n                        </div>\n                        <div className=\"information\">\n                            <div className=\"rate\">\n                                <div className=\"label\">{t(\"rate\")}</div>\n                                <div className=\"info\">\n                                    <img src=\"./images/star.webp\" alt=\"star\" loading=\"lazy\"/>\n                                    {active_order.driver.rate}\n                                </div>\n                            </div>\n                            <div className=\"line\"></div>\n                            <div className=\"count\">\n                                <div className=\"label\">{t(\"orders_finishet\")}</div>\n                                <div className=\"info\">\n                                    {active_order.driver.finished_orders_count}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {showRete && <div className=\"rate-stars\">\n\n                    <ReactStars\n                        count={5}\n                        onChange={(e) => {\n                            setRaidCount(e);\n                            rateDriver()\n                        }}\n                        value={raidCount}\n                        size={35}\n                        color2={\"rgba(250, 190, 25, 1)\"}\n                        half={false}\n                    />\n                </div>}\n\n                {/*<div className=\"reason-box\">*/}\n                {/*    <div className=\"title\">Qanday muammo yuz berdi ?</div>*/}\n                {/*    <div className=\"reasons\">*/}\n                {/*        <div className=\"reason\">*/}\n                {/*            Haydovchi kech keldi*/}\n                {/*        </div>*/}\n                {/*        <div className=\"reason\">Noto‘g‘ri manzilga bordi</div>*/}\n                {/*        <div className=\"reason\">Yo‘l davomida haydovchi muloqoti yoqimsiz bo‘ldi</div>*/}\n                {/*        <div className=\"reason\">Avtomobil toza emasdi</div>*/}\n                {/*        <div className=\"reason\">Xavfsiz harakat qilmadi</div>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n                <div className=\"location-box\">\n                    <div className=\"location-from\">\n                        <div className=\"location-text\">\n                            {active_order.pick_up_locations.map((item_loc, index_loc) => {\n                                return <div key={index_loc} className=\"location-from\">\n                                    <div className=\"circle-warpper\">\n                                        <div className=\"circle\"></div>\n                                    </div>\n                                    <div className=\"location-text\">\n                                        {item_loc.address}\n                                    </div>\n                                </div>\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"line\"></div>\n                    <div className=\"location-to\">\n                        <div className=\"location-text\">\n                            {active_order.drop_off_locations.map((item_loc, index_loc) => {\n                                return <div key={index_loc} className=\"location-to\">\n                                    <div className=\"circle-warpper\">\n                                        <div className=\"circle\"></div>\n                                    </div>\n                                    <div className=\"location-text\">\n                                        {item_loc.address}\n                                    </div>\n                                </div>\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"info-box\">\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"direction\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.car_service && active_order.car_service.translations[i18next.language].name}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"tarif\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.car_category && active_order.car_category.translations[i18next.language].name}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"payment_type\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.payment_type === \"cash\" ? t(\"cash\") : t(\"card\")}\n                        </div>\n                    </div>\n\n                    {active_order.car_service && active_order.car_service.translations[\"en\"].name === \"Postal\" && <>\n                        <div className=\"information\">\n                            <div className=\"label\">\n                                {t(\"sender\")}\n                            </div>\n                            <div className=\"val\">\n                                {active_order.sender_phone}\n                            </div>\n                        </div>\n                        <div className=\"information\">\n                            <div className=\"label\">\n                                {t(\"person2\")}\n                            </div>\n                            <div className=\"val\">\n                                {active_order.receiver_phone}\n                            </div>\n                        </div>\n                        <div className=\"information\">\n                            <div className=\"label\">\n                                {t(\"pay_who\")}\n                            </div>\n                            <div className=\"val\">\n                                {active_order.payer === \"sender\" ? t(\"sender\") : t(\"person2\")}\n                            </div>\n                        </div>\n                    </>}\n\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"order_id\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.id}\n                        </div>\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"date_time\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.pick_up_date}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"price-order\">\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"passangers_count\")}\n                        </div>\n                        <div className=\"val\">\n                            {active_order.passanger_count} kishi\n                        </div>\n                    </div>\n\n                    <div className=\"information\">\n                        <div className=\"label\">\n                            {t(\"price\")}\n                        </div>\n                        <div className=\"val-price\">\n                            {active_order.price} {t(\"sum\")}\n                        </div>\n                    </div>\n                </div>\n            </div>}\n\n            {orderPage === 6 && <div className=\"info-box\">\n                <div className=\"header\">\n                    <img onClick={() => dispatch(setPageNumber(0))} src=\"./images/prev.png\" alt=\"prev\" loading=\"lazy\"/>\n                    <div className=\"title\">\n                        {t(\"plus_info\")}\n                    </div>\n                </div>\n                <div className=\"form-date\">\n                    <div className=\"label\">\n                        {t(\"date\")}\n                    </div>\n                    <div className=\"input-time\">\n                        <input value={pick_up_date} onChange={(e) => setPick_up_date(e.target.value)} type=\"date\"/>\n                    </div>\n                </div>\n                <div className=\"form-date\">\n                    <div className=\"label\">\n                        {t(\"time\")}\n                    </div>\n                    <div className=\"input-time\">\n                        <input value={pick_up_time} onChange={(e) => setPick_up_time(e.target.value)} type=\"time\"/>\n                    </div>\n                </div>\n                <div className=\"client-count\">\n                    <div className=\"title\">\n                        {t(\"passangers_count\")}\n                    </div>\n                    <div className=\"counter\">\n                        <div className=\"label\">\n                            {t(\"passangers_count\")}\n                        </div>\n                        <div className=\"count\">\n                            <div onClick={() => {\n                                if (client_count > 0) {\n                                    setClient_count(prevState => prevState - 1)\n                                }\n                            }} className=\"button\">\n                                <img src=\"./images/minus-sm.png\" alt=\"count\"/>\n                            </div>\n\n                            <span>{client_count}</span>\n\n                            <div onClick={() => {\n                                if (client_count < 12) {\n                                    setClient_count(prevState => prevState + 1)\n                                }\n                            }} className=\"button\">\n                                <img src=\"./images/plus-sm.png\" alt=\"count\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"line\"></div>\n                    <div className=\"service\">\n                        <div className=\"left\">\n                            <div className=\"text\">\n                                <div className=\"name\">\n                                    {t(\"all_seats\")}\n                                </div>\n                            </div>\n                        </div>\n                        <div onClick={() => setAllSeats(prevState => !prevState)}\n                             className={`on-of ${all_seats ? \"active-icon\" : \"\"}`}>\n                            <div className={`on-icon ${all_seats ? \"active\" : \"\"}`}></div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-date\">\n                    <div className=\"label\">\n                        {t(\"price\")}\n                    </div>\n                    <div className=\"input-time\">\n                        {price_list.map((item, index) => {\n                            if (active_price === item.category.id) {\n                                return <span key={index}>{item.cost} {t(\"sum\")}</span>\n                            }\n                        })}\n                    </div>\n                </div>\n            </div>}\n\n            {orderPage === 7 && <div className=\"info-box-postal\">\n                <div className=\"header\">\n                    <img onClick={() => dispatch(setPageNumber(0))} src=\"./images/prev.png\" alt=\"prev\" loading=\"lazy\"/>\n                    <div className=\"title\">\n                        {t(\"plus_info\")}\n                    </div>\n                </div>\n                <div className=\"info-postal\">\n                    <div className=\"title\">{t(\"sender\")}</div>\n                    <div className=\"person-info\">\n                        <div className=\"left-icon-person\">\n                            <img src=\"./images/person.webp\" alt=\"person\"/>\n                        </div>\n                        <div className=\"right-info\">\n                            <div className=\"title\">\n                                {t(\"sender_location\")}\n                            </div>\n                            <div className=\"bottom-info\">\n                                {PickUpLocations[0].address}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"person-info\">\n                        <div className=\"left-icon-phone\">\n                            <img src=\"./images/phone-person.png\" alt=\"person\"/>\n                        </div>\n                        <div className=\"right-info\">\n                            <div className=\"title\">\n                                {t(\"phone\")}\n                            </div>\n                            <div className=\"bottom-info\">\n                                <input value={sender_phone} onChange={(e) => setsender_phone(e.target.value)}\n                                       placeholder={t(\"phone_form\")} type=\"number\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"info-postal\">\n                    <div className=\"title\">{t(\"postal\")}</div>\n                    <div className=\"person-info\">\n                        <div className=\"left-icon-postal\">\n                            <img src=\"./images/package_2_fill.webp\" alt=\"person\"/>\n                        </div>\n                        <div className=\"right-info\">\n                            <div className=\"title\">\n                                {t(\"postal_location\")}\n                            </div>\n                            <div className=\"bottom-info\">\n                                {DropOffLocations[0].address}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"person-info\">\n                        <div className=\"left-icon-phone\">\n                            <img src=\"./images/phone-person.png\" alt=\"person\"/>\n                        </div>\n                        <div className=\"right-info\">\n                            <div className=\"title\">\n                                {t(\"phone\")}\n                            </div>\n                            <div className=\"bottom-info\">\n                                <input value={receiver_phone} onChange={(e) => setReceiverPhone(e.target.value)}\n                                       placeholder={t(\"phone_form\")} type=\"number\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"order-info\">\n                    <div className=\"title\">\n                        {t(\"about_order\")}\n                    </div>\n                    <div className=\"payment-who\">\n                        <div className=\"title\">{t(\"payment_who\")}</div>\n\n                        <div className=\"on-of\">\n                            <div onClick={() => setPayer(\"sender\")} className={`of ${payer === \"sender\" ? \"on\" : \"\"}`}>\n                                {t(\"person1\")}\n                            </div>\n                            <div onClick={() => setPayer(\"receiver\")}\n                                 className={`of ${payer === \"receiver\" ? \"on\" : \"\"}`}>\n                                {t(\"person2\")}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"form-date\">\n                        <div className=\"label\">\n                            {t(\"date\")}\n                        </div>\n                        <div className=\"input-time\">\n                            <input value={pick_up_date} onChange={(e) => setPick_up_date(e.target.value)} type=\"date\"/>\n                        </div>\n                    </div>\n\n                    <div className=\"form-date\">\n                        <div className=\"label\">\n                            {t(\"time\")}\n                        </div>\n                        <div className=\"input-time\">\n                            <input value={pick_up_time} onChange={(e) => setPick_up_time(e.target.value)} type=\"time\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>}\n\n            {(orderPage === 6 || orderPage === 7) && <div onClick={SendOrder} className=\"button-box\">\n                <div className=\"button\">\n                    {t(\"order\")}\n                </div>\n            </div>}\n        </div>\n    );\n};\n\nexport default Order;","import React, {useState, useMemo, useEffect, useRef} from \"react\";\nimport \"./style-dashboard.scss\";\nimport Header from \"../header/Header\";\nimport {\n    GoogleMap,\n    MarkerF,\n    useLoadScript\n} from \"@react-google-maps/api\";\nimport {GOOGLE_MAPS_API_KEY} from \"./googleMapsApi\";\nimport i18next from \"i18next\";\nimport Loader from \"../loader/Loader\";\nimport Order from \"../order/Order\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {hideModal, showModals} from \"../../redux/ModalContent\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport axios from \"axios\";\nimport {useMediaQuery} from \"@mui/material\";\nimport {useTranslation} from \"react-i18next\";\n\nconst libraries = [\"places\"];\n\nconst Dashboard = () => {\n    const isMobile = useMediaQuery(\"(max-width: 1024px)\");\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data)\n    const DriverLocation = useSelector((store) => store.DriverLocation.data)\n    // const [invalidService, setInvalidService] = useState(\"finished\");\n    const [showModal, setShowModal] = useState(false);\n    const [center, setCenter] = useState();\n    const dispatch = useDispatch();\n    const modalContent = useSelector((store) => store.ModalContent.data);\n    const nodeRef = useRef(null);\n    const [history, setHistory] = useState([]);\n    const [order_info, setOrder_info] = useState({});\n\n    const selectAddressIcon = {\n        url: \"./images/address.png\",\n        scaledSize: {width: 40, height: 50},\n    };\n\n    const driverIcon = {\n        url: \"./images/driver-icon.png\",\n        scaledSize: {width: 60, height: 60},\n    };\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            let locMy = {lat: latitude, lng: longitude};\n            setCenter(locMy);\n        });\n\n        axios.get(`${baseUrl}/api/v1/client-history/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }\n        ).then((response) => {\n            setHistory(response.data);\n        }).catch((error) => {\n            if (error.response.status == 401 && !isMobile) {\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"userId\");\n                showModalContent(\"log-in\")\n            }\n        });\n\n    }, []);\n\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: true,\n            clickableIcons: false,\n        }),\n        []\n    );\n\n    const showModalContent = (status) => {\n        dispatch(showModals({show: true, status: status}));\n    };\n\n    if (!isLoaded) return <Loader/>;\n    return (\n        <>\n            <div className=\"dashboard-wrapper\">\n                <CSSTransition\n                    in={modalContent.show && modalContent.status === \"orders\"}\n                    nodeRef={nodeRef}\n                    timeout={300}\n                    classNames=\"alert\"\n                    unmountOnExit>\n                    <div\n                        className={`modal-sloy-orders ${showModal ? \"disabled\" : \"\"}`}>\n                        <div ref={nodeRef} className=\"modal-card\">\n                            <div className=\"header-buttons\">\n                                <div className=\"header\">\n                                    <h1 className=\"title\">\n                                        {t(\"my_orders\")}\n                                    </h1>\n                                    <div className=\"cancel-btn\">\n                                        <img\n                                            onClick={() => {\n                                                dispatch(hideModal({show: false}))\n                                            }}\n                                            src=\"./images/cancel.webp\"\n                                            alt=\"cancel\"\n                                        />\n                                    </div>\n                                </div>\n                                {/*<div className=\"on-of\">*/}\n                                {/*    <div onClick={() => setInvalidService(\"finished\")}*/}\n                                {/*         className={`of ${invalidService === \"finished\" ? \"on\" : \"\"}`}>*/}\n                                {/*        {t(\"finished_order\")}*/}\n                                {/*    </div>*/}\n                                {/*    <div onClick={() => setInvalidService(\"rejected\")}*/}\n                                {/*         className={`of ${invalidService === \"rejected\" ? \"on\" : \"\"}`}>*/}\n                                {/*        {t(\"concelled_order\")}*/}\n                                {/*    </div>*/}\n                                {/*</div>*/}\n                            </div>\n                            <div className=\"orders-list\">\n                                {history.map((item, index) => {\n                                    return <div key={index} className=\"order\">\n                                        <div className=\"date-order\">{item.created_at.split(\" \")[0]}</div>\n                                        <div onClick={() => {\n                                            setShowModal(true)\n                                            setOrder_info(item);\n                                        }} className=\"order-info\">\n                                            {item.pick_up_locations.map((item_loc, index_loc) => {\n                                                return <div key={index_loc} className=\"location-from\">\n                                                    <div className=\"circle-warpper\">\n                                                        <div className=\"circle\"></div>\n                                                    </div>\n                                                    <div className=\"location-text\">\n                                                        {item_loc.address}\n                                                    </div>\n                                                </div>\n                                            })}\n                                            <div className=\"line\"></div>\n                                            {item.drop_off_locations.map((item_loc, index_loc) => {\n                                                return <div key={index_loc} className=\"location-to\">\n                                                    <div className=\"circle-warpper\">\n                                                        <div className=\"circle\"></div>\n                                                    </div>\n                                                    <div className=\"location-text\">\n                                                        {item_loc.address}\n                                                    </div>\n                                                </div>\n                                            })}\n                                            <div className=\"bottom-info\">\n                                                <div className=\"left-info\">\n                                                    <div className=\"text\">\n                                                        {item.created_at.split(\" \")[1].slice(0, 5)}\n                                                    </div>\n                                                    <div className=\"dot\"></div>\n                                                    <div className=\"text\">\n                                                        {item.car_category.translations[i18next.language].name}\n                                                    </div>\n                                                </div>\n                                                <div className=\"price\">\n                                                    {item.price} {t(\"sum\")}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </CSSTransition>\n\n                <CSSTransition\n                    in={showModal}\n                    nodeRef={nodeRef}\n                    timeout={300}\n                    classNames=\"alert\"\n                    unmountOnExit\n                >\n                    <div className=\"modal-sloy-orders\">\n                        <div ref={nodeRef} className=\"modal-card-about-order\">\n                            <div className=\"header\">\n                                <div onClick={() => setShowModal(false)} className=\"cancel-btn\">\n                                    <img src=\"./images/cancel.webp\"\n                                         alt=\"cancel\"\n                                    />\n                                </div>\n                            </div>\n                            {order_info.driver && order_info.client && order_info && <div className=\"content\">\n                                <div className=\"header-content\">\n                                    <div className=\"car-info\">\n                                        <div className=\"name-car\">\n                                            {order_info.driver.car_color.translations[i18next.language].name}\n                                            &ensp;\n                                            {order_info.driver.car_make.translations[i18next.language].name}\n                                            &ensp;\n                                            {order_info.driver.car_model.translations[i18next.language].name}\n                                        </div>\n                                        <div className=\"car-number\">\n                                            <div className=\"num\">{order_info.driver.car_number.slice(0, 2)}</div>\n                                            <div className=\"line\"></div>\n                                            <div className=\"num\">{order_info.driver.car_number.slice(2)}</div>\n                                        </div>\n                                    </div>\n                                    <div className=\"car-img\">\n                                        <img src={baseUrl + \"/\" + order_info.car_category.icon} alt=\"car\"\n                                             loading=\"lazy\"/>\n                                    </div>\n                                </div>\n                                <div className=\"driver-info\">\n                                    <div className=\"person-img\">\n                                        <img src={baseUrl + \"/\" + order_info.driver.profile_image} alt=\"\"/>\n                                    </div>\n                                    <div className=\"info\">\n                                        <div className=\"name\">\n                                            {order_info.driver.first_name}\n                                            &ensp;\n                                            {order_info.driver.last_name}\n                                        </div>\n                                        <div className=\"information\">\n                                            <div className=\"rate\">\n                                                <div className=\"label\">{t(\"rate\")}</div>\n                                                <div className=\"info\">\n                                                    <img src=\"./images/star.webp\" alt=\"star\" loading=\"lazy\"/>\n                                                    {order_info.driver.rate}\n                                                </div>\n                                            </div>\n                                            <div className=\"line\"></div>\n                                            <div className=\"count\">\n                                                <div className=\"label\">{t(\"orders_finishet\")}</div>\n                                                <div className=\"info\">{order_info.driver.finished_orders_count}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"location-box\">\n                                    {order_info.pick_up_locations.map((item_loc, index_loc) => {\n                                        return <div key={index_loc} className=\"location-from\">\n                                            <div className=\"circle-warpper\">\n                                                <div className=\"circle\"></div>\n                                            </div>\n                                            <div className=\"location-text\">\n                                                {item_loc.address}\n                                            </div>\n                                        </div>\n                                    })}\n                                    <div className=\"line\"></div>\n                                    {order_info.drop_off_locations.map((item_loc, index_loc) => {\n                                        return <div key={index_loc} className=\"location-to\">\n                                            <div className=\"circle-warpper\">\n                                                <div className=\"circle\"></div>\n                                            </div>\n                                            <div className=\"location-text\">\n                                                {item_loc.address}\n                                            </div>\n                                        </div>\n                                    })}\n                                </div>\n                                <div className=\"information-box-order\">\n                                    <div className=\"list\">\n                                        <div className=\"title\">{t(\"direction\")}</div>\n                                        <div className=\"value\">\n                                            {order_info.car_service.translations[i18next.language].name}\n                                        </div>\n                                    </div>\n                                    <div className=\"list\">\n                                        <div className=\"title\">{t(\"tarif\")}</div>\n                                        <div className=\"value\">\n                                            {order_info.car_category.translations[i18next.language].name}\n                                        </div>\n                                    </div>\n                                    <div className=\"list\">\n                                        <div className=\"title\">{t(\"payment_type\")}</div>\n                                        <div className=\"value\">\n                                            <img src=\"./images/money.webp\" alt=\"money\" loading=\"lazy\"/>\n                                            {order_info.payment_type === \"cash\" && t(\"cash\")}\n                                            {order_info.payment_type === \"card\" && t(\"card\")}\n                                        </div>\n                                    </div>\n                                    {order_info.car_service && order_info.car_service.translations[\"en\"].name === \"Postal\" && <>\n                                        <div className=\"list\">\n                                            <div className=\"title\">\n                                                {t(\"sender\")}\n                                            </div>\n                                            <div className=\"value\">\n                                                {order_info.sender_phone}\n                                            </div>\n                                        </div>\n                                        <div className=\"list\">\n                                            <div className=\"title\">\n                                                {t(\"person2\")}\n                                            </div>\n                                            <div className=\"value\">\n                                                {order_info.receiver_phone}\n                                            </div>\n                                        </div>\n                                        <div className=\"list\">\n                                            <div className=\"title\">\n                                                {t(\"pay_who\")}\n                                            </div>\n                                            <div className=\"value\">\n                                                {order_info.payer === \"sender\" ? t(\"sender\") : t(\"person2\")}\n                                            </div>\n                                        </div>\n                                    </>}\n                                    <div className=\"list\">\n                                        <div className=\"title\">{t(\"order_id\")}</div>\n                                        <div className=\"value\">{order_info.id}</div>\n                                    </div>\n                                    <div className=\"list\">\n                                        <div className=\"title\">{t(\"date_time\")}</div>\n                                        <div className=\"value\">\n                                            {order_info.end_date ? order_info.end_date : order_info.pick_up_date}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"bottom-info\">\n                                    <div className=\"list\">\n                                        <div className=\"title\">{t(\"passangers_count\")}</div>\n                                        <div className=\"value\">\n                                            <img src=\"./images/users.webp\" alt=\"users\" loading=\"lazy\"/>\n                                            {order_info.passanger_count}\n                                        </div>\n                                    </div>\n                                    <div className=\"list\">\n                                        <div className=\"title\">\n                                            {t(\"price\")}\n                                        </div>\n                                        <div className=\"value price\">\n                                            {order_info.price} {t(\"sum\")}\n                                        </div>\n                                    </div>\n                                </div>\n                                {/*<div className=\"del-btn\">*/}\n                                {/*    <img src=\"./images/trash.webp\" alt=\"del\" loading=\"lazy\"/>*/}\n                                {/*    {t(\"del_info\")}*/}\n                                {/*</div>*/}\n                            </div>}\n                        </div>\n                    </div>\n                </CSSTransition>\n\n                <div className=\"top-side\">\n                    <Header/>\n                </div>\n\n                <div className=\"bottom-side\">\n                    <GoogleMap\n                        zoom={11}\n                        center={center}\n                        options={options}\n                        mapContainerClassName=\"map\"\n                    >\n                        {center && (\n                            <MarkerF\n                                position={center}\n                                icon={selectAddressIcon}\n                            />)}\n\n\n                        {DriverLocation.latitude && DriverLocation.longitude && (\n                            <MarkerF\n                                position={{lat: DriverLocation.latitude, lng: DriverLocation.longitude}}\n                                icon={driverIcon}\n                            />)}\n\n                    </GoogleMap>\n                    <Order/>\n                    <div className=\"app-box\">\n                        <div className=\"top-side-app\">\n                            <a target=\"_blank\" href=\"https://apps.apple.com/us/app/adataxi/id6744370881\"\n                               className=\"button\">\n                                <div className=\"left\">\n                                    <img src=\"./images/apple.webp\" alt=\"apple\" loading=\"lazy\"/>\n                                </div>\n                                <div className=\"right\">\n                                    <div className=\"top-text\">Download on the</div>\n                                    <b>App store</b>\n                                </div>\n                            </a>\n                            <a target=\"_blank\" href=\"https://play.google.com/store/apps/details?id=uz.adataxi.client\"\n                               className=\"button\">\n                                <div className=\"left\">\n                                    <img src=\"./images/google.webp\" alt=\"google\" loading=\"lazy\"/>\n                                </div>\n                                <div className=\"right\">\n                                    <div className=\"top-text\">GET IT ON</div>\n                                    <b>Google Play</b>\n                                </div>\n                            </a>\n                        </div>\n                        <div className=\"bottom-side-app\">\n                            <a target=\"_blank\" href=\"https://adataxi.uz/offer-app\">\n                                © 2025 ООО «ADA TAXI»\n                                {t(\"offer\")}\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"text-warning\">\n                        {t(\"map_warning\")}\n                    </div>\n                </div>\n            </div>\n            <div className=\"mobil-device\">\n                <div className=\"logo\">\n                    <img src=\"./images/logo3.webp\" alt=\"logo\"/>\n                </div>\n                <div className=\"des\">\n                    \"Mijoz Ada Taxi\" platformasini\n                    <span> PLANSHET </span>\n                    va\n                    <span> MOBIL TELEFON </span>\n                    qurilmalari orqali foydalanish uchun App store yoki Play marketdan \"Ada taxi\" ilovasini yuklab\n                    olishingiz\n                    yuklab olishingiz mumkin!\n                </div>\n                <div className=\"app-box\">\n                    <div className=\"top-side-app\">\n                        <a target=\"_blank\" href=\"https://apps.apple.com/us/app/adataxi/id6744370881\"\n                           className=\"button\">\n                            <div className=\"left\">\n                                <img src=\"./images/apple.webp\" alt=\"apple\" loading=\"lazy\"/>\n                            </div>\n                            <div className=\"right\">\n                                <div className=\"top-text\">Download on the</div>\n                                <b>App store</b>\n                            </div>\n                        </a>\n                        <a target=\"_blank\" href=\"https://play.google.com/store/apps/details?id=uz.adataxi.client\"\n                           className=\"button\">\n                            <div className=\"left\">\n                                <img src=\"./images/google.webp\" alt=\"google\" loading=\"lazy\"/>\n                            </div>\n                            <div className=\"right\">\n                                <div className=\"top-text\">GET IT ON</div>\n                                <b>Google Play</b>\n                            </div>\n                        </a>\n                    </div>\n                    <div className=\"bottom-side-app\">\n                        <a target=\"_blank\" href=\"https://adataxi.uz/offer-app\">\n                            © 2025 ООО «ADA TAXI»\n                            {t(\"offer\")}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Dashboard;","export const GOOGLE_MAPS_API_KEY = 'AIzaSyBEN2azIRg6YCHa-tV8yAEUJoHsn__fRBM'","import React, {useEffect, useState} from 'react';\nimport \"./style-profile.scss\";\nimport Header from \"../header/Header\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport axios from \"axios\";\nimport {useTranslation} from \"react-i18next\";\n\n\nconst Profile = () => {\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data)\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [profile_info, setProfileInfo] = useState({});\n\n    useEffect(() => {\n        if (localStorage.getItem(\"token\")) {\n            axios.get(`${baseUrl}/api/v1/client/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setProfileInfo(response.data);\n            }).catch((error) => {\n                if (error.response.status == 401) {\n                    localStorage.removeItem(\"token\");\n                    localStorage.removeItem(\"userId\");\n                    showModalContent(\"log-in\")\n                }\n            })\n        }\n    }, []);\n\n    const showModalContent = (status) => {\n        dispatch(showModals({show: true, status: status}));\n    };\n\n    return (\n        <div className=\"profile-wrapper\">\n            <div className=\"top-side\">\n                <Header/>\n            </div>\n            <div className=\"bottom-side\">\n                <div className=\"information-profile\">\n                    <div className=\"photo-client\">\n                        {profile_info.profile_image ?\n                            <img src={profile_info.profile_image} alt=\"photo\" loading=\"lazy\"/> :\n                            <img src=\"./images/user.webp\" alt=\"person\" loading=\"lazy\"/>}\n                    </div>\n                    <div className=\"name\">\n                        {profile_info.first_name}\n                        &ensp;\n                        {profile_info.last_name}\n                    </div>\n                    <div className=\"information\">\n                        <div className=\"rate\">\n                            <div className=\"label\">{t(\"rate\")}</div>\n                            <div className=\"info\">\n                                <img src=\"./images/star.webp\" alt=\"star\" loading=\"lazy\"/>\n                                {profile_info.rate}\n                            </div>\n                        </div>\n                        <div className=\"line\"></div>\n                        <div className=\"count\">\n                            <div className=\"label\">{t(\"orders_finishet\")}</div>\n                            <div className=\"info\">\n                                {profile_info.finished_orders_count}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"contacts\">\n                        <div className=\"item\">\n                            <div className=\"label\">{t(\"my_phone\")}</div>\n                            <div className=\"info\">{profile_info.phone}</div>\n                        </div>\n\n                        {/*<div className=\"line\"></div>*/}\n\n                        {/*<div className=\"item\">*/}\n                        {/*    <div className=\"label\">Ro'yxatga olingan sana:</div>*/}\n                        {/*    <div className=\"info\">01.02.2025</div>*/}\n                        {/*</div>*/}\n                    </div>\n                    <div className=\"buttons\">\n                        <div onClick={() => navigate(\"/edit-profile\")} className=\"item\">\n                            <img src=\"./images/edit.webp\" alt=\"edit\" loading=\"lazy\"/>\n                            {t(\"edit\")}\n                        </div>\n                        <div className=\"line\"></div>\n\n                        <div onClick={() => showModalContent(\"log-out\")} className=\"item\">\n                            <img src=\"./images/log-out-user.webp\" alt=\"log-out\" loading=\"lazy\"/>\n                            {t(\"logOut\")}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;","import React, {useEffect, useState} from 'react';\nimport \"./style-edit-profile.scss\";\nimport Header from \"../header/Header\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport axios from \"axios\";\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\nimport {useTranslation} from \"react-i18next\";\n\n\nconst EditProfile = () => {\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data)\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [profile_image, setProfileImage] = useState(null);\n    const [imagePreview, setImagePreview] = useState(null);\n    const [first_name, setFirstName] = useState(\"\");\n    const [last_name, setLastName] = useState(\"\");\n    const [gender, setGender] = useState(\"male\");\n    useEffect(() => {\n        if (localStorage.getItem(\"token\")) {\n            axios.get(`${baseUrl}/api/v1/client/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setFirstName(response.data.first_name);\n                setLastName(response.data.last_name);\n                setGender(response.data.gender);\n                setImagePreview(response.data.profile_image);\n            }).catch((error) => {\n                if (error.response.status == 401) {\n                    localStorage.removeItem(\"token\");\n                    localStorage.removeItem(\"userId\");\n                    showModalContent(\"log-in\")\n                }\n            })\n        }\n    }, []);\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            setProfileImage(file);\n            setImagePreview(URL.createObjectURL(file));\n        }\n    };\n\n    const showModalContent = (status) => {\n        dispatch(showModals({show: true, status: status}));\n    };\n\n    const saveProfile = () => {\n        let data = {\n            first_name,\n            last_name,\n            gender\n        }\n\n        let formData = new FormData();\n        for (let key in data) {\n            formData.append(key, data[key]);\n        }\n\n        if (profile_image) {\n            formData.append(\"profile_image\", profile_image);\n        }\n\n        axios.post(`${baseUrl}/api/v1/client/`, formData, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then((response) => {\n            let idAlert = Date.now();\n            let alert = {\n                id: idAlert,\n                text: t(\"save_info\"),\n                img: \"./images/green.svg\",\n                color: \"#FFFAEA\",\n            };\n            dispatch(addAlert(alert));\n            setTimeout(() => {\n                dispatch(delAlert(idAlert));\n            }, 5000);\n        })\n\n\n    }\n\n    return (\n        <div className=\"edit-profile-wrapper\">\n            <div className=\"top-side\">\n                <Header/>\n            </div>\n            <div className=\"bottom-side\">\n                <div className=\"information-profile\">\n                    <div className=\"photo-client\">\n                        <img\n                            src={imagePreview || \"./images/camera.webp\"}\n                            alt=\"photo\"\n                            loading=\"lazy\"\n                        />\n                    </div>\n                    <div className=\"choose-img\">\n                        <div className=\"text\">\n                            {profile_image ? t(\"edit\") : t(\"add_photo\")}\n                        </div>\n                        <input onChange={handleFileChange} type=\"file\"/>\n                    </div>\n                    <div className=\"input-box\">\n                        <div className=\"label\">{t(\"first_name\")}</div>\n                        <input value={first_name} onChange={(e) => setFirstName(e.target.value)} type=\"text\"/>\n                    </div>\n                    <div className=\"input-box\">\n                        <div className=\"label\">{t(\"last_name\")}</div>\n                        <input value={last_name} onChange={(e) => setLastName(e.target.value)} type=\"text\"/>\n                    </div>\n                    <div className=\"label\">{t(\"gender\")}</div>\n                    <div className=\"on-of\">\n                        <div onClick={() => setGender(\"male\")} className={`of ${gender === \"male\" ? \"on\" : \"\"}`}>\n                            {t(\"male\")}\n                        </div>\n                        <div onClick={() => setGender(\"female\")}\n                             className={`of ${gender === \"female\" ? \"on\" : \"\"}`}>\n                            {t(\"female\")}\n                        </div>\n                    </div>\n                    <div className=\"buttons\">\n                        <div onClick={() => navigate(\"/profile\")} className=\"cancel-btn\">\n                            {t(\"cancel_order\")}\n                        </div>\n                        <div onClick={saveProfile} className=\"save-btn\">\n                            {t(\"save_information\")}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditProfile;","import Dashboard from \"../components/dashboard/Dashboard\";\nimport Profile from \"../components/profile/Profile\";\nimport EditProfile from \"../components/edit-profile/EditProfile\";\n\nexport const MainRoutes = [\n    {\n        path: \"/\",\n        element: <Dashboard/>\n    },\n    {\n        path: \"/profile\",\n        element: <Profile/>\n    },\n    {\n        path: \"/edit-profile\",\n        element: <EditProfile/>\n    },\n];\n\n\n","import React, {useRef, useState, useEffect, useContext} from \"react\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {hideModal, showModals} from \"../../redux/ModalContent\";\nimport PhoneInput from \"react-phone-number-input\";\nimport AuthCode from \"react-auth-code-input\";\nimport axios from \"axios\";\nimport {useOnKeyPress} from \"./useOnKeyPress\";\nimport \"./style.scss\";\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\nimport {AddClientInfo} from \"../../redux/AddClient\";\nimport {changePayment} from \"../../redux/PaymentType\";\nimport {useTranslation} from \"react-i18next\";\nimport \"@reach/combobox/styles.css\";\nimport {webSockedContext} from \"../app/App\";\nimport i18next from \"i18next\";\n\nconst Modal = () => {\n    let webSocked = useContext(webSockedContext);\n    const {t} = useTranslation();\n    const nodeRef = useRef(null);\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const dispatch = useDispatch();\n    const modalContent = useSelector((store) => store.ModalContent.data);\n    const PaymentType = useSelector((store) => store.PaymentType.data)\n\n    const [phone, setPhone] = useState(\"\");\n    const [code, setCode] = useState(\"\");\n    const [checkCode, setCheckCode] = useState(false);\n    const [minutes, setMinutes] = useState(0);\n    const [seconds, setSeconds] = useState(60);\n    const [reason, setReason] = useState(0);\n    const [reasonList, setReasonList] = useState([]);\n    const [other_clinet_phone, setOtherClinetPhone] = useState(\"\");\n    const [other_clinet_name, setOtherClinetName] = useState(\"\");\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (seconds > 0) {\n                setSeconds(seconds - 1);\n            }\n            if (seconds === 0) {\n                if (minutes === 0) {\n                    clearInterval(interval);\n                } else {\n                    setSeconds(60);\n                    setMinutes(minutes - 1);\n                }\n            }\n        }, 1000);\n\n        return () => {\n            clearInterval(interval);\n        };\n    }, [checkCode ? seconds : null]);\n\n    useEffect(() => {\n        if (localStorage.getItem(\"token\")) {\n            axios.get(`${baseUrl}/api/v1/reject-reason/client/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setReasonList(response.data);\n            })\n        }\n    }, []);\n\n    const logOut = () => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userId\");\n        window.location.reload();\n        window.location.pathname = \"/\";\n    };\n\n    const resetTimer = () => {\n        setMinutes(0);\n        setSeconds(59);\n    };\n\n    const getCodeValue = (e) => {\n        setCode(e);\n    };\n\n    const HandleLogin = () => {\n        let user = {\n            phone: phone,\n            role: \"client\",\n        };\n        axios\n            .post(`${baseUrl}/api/v1/auth/verify_number/`, user)\n            .then((response) => {\n                localStorage.setItem(\"userId\", response.data.user_id);\n                setCheckCode((prevState) => true);\n                dispatch(showModals({show: true, status: \"log-in-code\"}));\n                if (checkCode) {\n                    resetTimer();\n                }\n            })\n            .catch((error) => {\n                if (error.response.status === 400) {\n                    if (error.response.data.code === -10) {\n                        let idAlert = Date.now();\n                        let alert = {\n                            id: idAlert,\n                            text: t(\"error_phone\"),\n                            img: \"./images/yellow.svg\",\n                            color: \"#FFFAEA\",\n                        };\n                        dispatch(addAlert(alert));\n                        setTimeout(() => {\n                            dispatch(delAlert(idAlert));\n                        }, 5000);\n                    }\n                }\n            });\n    };\n\n    const CheckCode = () => {\n        axios\n            .post(`${baseUrl}/api/v1/auth/verify_code/`, {\n                user: localStorage.getItem(\"userId\"),\n                code: code,\n                role: \"client\"\n            })\n            .then((response) => {\n                localStorage.setItem(\"token\", response.data.token);\n                dispatch(hideModal({show: false}))\n                window.location.pathname = \"/edit-profile\";\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert,\n                    text: t(\"register\"),\n                    img: \"./images/green.svg\",\n                    color: \"#FFFAEA\",\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n            })\n            .catch((error) => {\n                if (error.response.status === 400) {\n                    if (error.response.data.code === -12) {\n                        let idAlert = Date.now();\n                        let alert = {\n                            id: idAlert,\n                            text: t(\"error_code\"),\n                            img: \"./images/red.svg\",\n                            color: \"#FFFAEA\",\n                        };\n                        dispatch(addAlert(alert));\n                        setTimeout(() => {\n                            dispatch(delAlert(idAlert));\n                        }, 5000);\n                    }\n                }\n            });\n    };\n\n    const changePaymentType = (e) => {\n        let payment = {payment_type: e}\n        dispatch(changePayment(payment))\n    }\n\n    const addClient = () => {\n        let client = {\n            name: other_clinet_name,\n            phone: other_clinet_phone\n        }\n        dispatch(AddClientInfo(client))\n        dispatch(hideModal({show: false}))\n    }\n\n    const cencelOrder = () => {\n        // let data = {\n        //     command: \"reject_order\",\n        //     order_id: modalContent.id,\n        //     reason_id: reason\n        // }\n        // if (webSocked) {\n        //     webSocked.send(JSON.stringify(data));\n        // } else {\n        //     let idAlertError = Date.now();\n        //     let alert = {\n        //         id: idAlertError,\n        //         text: t(\"net\"),\n        //         img: \"./images/red.svg\",\n        //         color: \"#FFEDF1\",\n        //     };\n        //     dispatch(addAlert(alert));\n        // }\n\n        webSocked(modalContent.id,reason)\n    }\n\n    useOnKeyPress(checkCode ? CheckCode : HandleLogin, \"Enter\");\n    return (\n        <CSSTransition\n            in={modalContent.show && modalContent.status !== \"orders\"}\n            nodeRef={nodeRef}\n            timeout={300}\n            classNames=\"alert\"\n            unmountOnExit\n        >\n            <div\n                className=\"modal-sloy\">\n                <div ref={nodeRef} className=\"modal-card\">\n\n                    {modalContent.status === \"log-out\" && (\n                        <div className=\"confirm\">\n                            <div className=\"toptext\">{t(\"log_out_text1\")}</div>\n                            <div className=\"btns\">\n                                <button\n                                    className=\"not-out\"\n                                    onClick={() => dispatch(hideModal({show: false}))}\n                                >\n                                    {t(\"log_out_text2\")}\n                                </button>\n                                <button onClick={logOut}>\n                                    {t(\"log_out_text3\")}\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                    {modalContent.status === \"log-in\" && (\n                        <div className=\"login-box\">\n                            <div className=\"logo\">\n                                <img src=\"./images/logo2.webp\" alt=\"\"/>\n                            </div>\n                            <h1 className=\"title\">\n                                {t(\"login_text\")}\n                            </h1>\n                            <p className=\"des\">\n                                {t(\"login_des\")}\n                            </p>\n                            <div className=\"label\">{t(\"login_phone\")}</div>\n                            <PhoneInput\n                                id=\"phone\"\n                                international\n                                defaultCountry=\"UZ\"\n                                value={phone}\n                                onChange={setPhone}\n                            />\n\n                            <button onClick={HandleLogin} disabled={phone === \"\" || phone === undefined}\n                                    className={`next-btn ${phone === \"\" || phone === undefined ? \"disabled\" : \"\"}`}>\n                                {t(\"next\")}\n                            </button>\n                        </div>\n                    )}\n\n                    {modalContent.status === \"log-in-code\" && (\n                        <div className=\"login-box\">\n                            <h1 className=\"title\">\n                                {t(\"enter_code\")}\n                            </h1>\n                            <p className=\"des\">\n                                {t(\"enter_code2\")}\n                            </p>\n                            <div className=\"phone-number\">\n                                {phone} <img onClick={() => {\n                                dispatch(showModals({show: true, status: \"log-in\"}));\n                                setCheckCode(false)\n                            }} src=\"./images/pencil.webp\" alt=\"edit-phone\" loading=\"lazy\"/>\n                            </div>\n                            <div className=\"inputs-verify-code\">\n                                <AuthCode\n                                    allowedCharacters=\"numeric\"\n                                    length=\"5\"\n                                    onChange={getCodeValue}\n                                />\n                            </div>\n\n                            {checkCode && seconds > 0 || minutes > 0 ? (\n                                <div className=\"coundown\">\n                                    <div className=\"count\">\n                                        <img src=\"./images/time.png\" alt=\"\"/>\n                                        {minutes < 10 ? `0${minutes}` : minutes}:\n                                        {seconds < 10 ? `0${seconds}` : seconds}\n                                    </div>\n                                </div>\n                            ) : <div onClick={HandleLogin} className=\"code-ref\">{t(\"enter_code3\")}</div>}\n\n                            <button\n                                disabled={code.trim().length < 5}\n                                onClick={CheckCode}\n                                className={` next-btn ${code.trim().length < 5 ? \"disabled\" : \"\"}`}\n                            >\n                                {t(\"login\")}\n                            </button>\n                        </div>\n                    )}\n\n                    {modalContent.status === \"download-app\" && (\n                        <div className=\"download-app\">\n                            <div className=\"cancel-btn\">\n                                <img\n                                    onClick={() => {\n                                        dispatch(hideModal({show: false}))\n                                    }}\n                                    src=\"./images/cancel.webp\"\n                                    alt=\"cancel\"/>\n                            </div>\n                            <div className=\"logo\">\n                                <img src=\"./images/logo2.webp\" alt=\"\"/>\n                            </div>\n                            <h1 className=\"title\">\n                                {t(\"title_apps\")}\n                            </h1>\n                            <div className=\"top-side-app\">\n                                <a target=\"_blank\" href=\"https://apps.apple.com/us/app/adataxi/id6744370881\"\n                                   className=\"button\">\n                                    <div className=\"left\">\n                                        <img src=\"./images/apple.webp\" alt=\"apple\" loading=\"lazy\"/>\n                                    </div>\n                                    <div className=\"right\">\n                                        <div className=\"top-text\">Download on the</div>\n                                        <b>App store</b>\n                                    </div>\n                                </a>\n                                <a target=\"_blank\"\n                                   href=\"https://play.google.com/store/apps/details?id=uz.adataxi.client\"\n                                   className=\"button\">\n                                    <div className=\"left\">\n                                        <img src=\"./images/google.webp\" alt=\"google\" loading=\"lazy\"/>\n                                    </div>\n                                    <div className=\"right\">\n                                        <div className=\"top-text\">GET IT ON</div>\n                                        <b>Google Play</b>\n                                    </div>\n                                </a>\n                            </div>\n                        </div>\n                    )}\n\n                    {modalContent.status === \"about-app\" && (\n                        <div className=\"about-app\">\n                            <div className=\"cancel-btn\">\n                                <img\n                                    onClick={() => {\n                                        dispatch(hideModal({show: false}))\n                                    }}\n                                    src=\"./images/cancel.webp\"\n                                    alt=\"cancel\"/>\n                            </div>\n                            <h1 className=\"title\">\n                                {t(\"app_links\")}\n                            </h1>\n                            <div className=\"logo-card\">\n                                <div className=\"logo\">\n                                    <img src=\"./images/logo3.webp\" alt=\"\"/>\n                                </div>\n                            </div>\n                            <a href=\"tel:+998915444499\">\n                                <div className=\"item line\">\n                                    <div className=\"left\">\n                                        <div className=\"icon\">\n                                            <img src=\"./images/phone.webp\" alt=\"phone\" loading=\"lazy\"/>\n                                        </div>\n                                        <div className=\"name\">\n                                            +998 91 544 44 99\n                                        </div>\n                                    </div>\n                                    <div className=\"icon-more\">\n                                        <img src=\"./images/more.webp\" alt=\"more\" loading=\"lazy\"/>\n                                    </div>\n                                </div>\n                            </a>\n                            <a target=\"_blank\" href=\"https://t.me/adataxi_admin\">\n                                <div className=\"item\">\n                                    <div className=\"left\">\n                                        <div className=\"icon\">\n                                            <img src=\"./images/sms.webp\" alt=\"phone\" loading=\"lazy\"/>\n                                        </div>\n                                        <div className=\"name\">\n                                            {t(\"send-message\")}\n                                        </div>\n                                    </div>\n                                    <div className=\"icon-more\">\n                                        <img src=\"./images/more.webp\" alt=\"more\" loading=\"lazy\"/>\n                                    </div>\n                                </div>\n                            </a>\n                            <div className=\"social-media\">\n                                <div className=\"media\">\n                                    <a target=\"_blank\" href=\"https://www.instagram.com/adataxi_uz/\">\n                                        <img src=\"./images/instagram.png\" alt=\"instagram\" loading=\"lazy\"/>\n                                    </a>\n\n                                    <div className=\"name\">Facebook</div>\n                                </div>\n\n                                <div className=\"media\">\n                                    <a target=\"_blank\" href=\"https://t.me/+Ruz2cjoeIC4xNTU6\">\n                                        <img src=\"./images/telegram.webp\" alt=\"yotube\" loading=\"lazy\"/>\n                                    </a>\n                                    <div className=\"name\">Telegram</div>\n                                </div>\n\n                                <div className=\"media\">\n                                    <a target=\"_blank\" href=\"https://www.youtube.com/@AdaTaxi\">\n                                        <img src=\"./images/youtube.webp\" alt=\"yotube\" loading=\"lazy\"/>\n                                    </a>\n                                    <div className=\"name\">Youtube</div>\n                                </div>\n                            </div>\n                            <div className=\"web-sayt\">\n                                <a target=\"_blank\" href=\"https://adataxi.uz/\">\n                                    © 2024 adataxi.uz</a>\n                            </div>\n                        </div>\n                    )}\n\n                    {modalContent.status === \"payment-type\" && (\n                        <div className=\"payment-type\">\n                            <div className=\"header\">\n                                <h1 className=\"title\">\n                                    To'lov turini tanlang\n                                </h1>\n                            </div>\n                            <div className=\"radio-buttons\">\n                                <label className=\"label-payment\">\n                                    <div className=\"left\">\n                                        <img src=\"./images/cash.png\" alt=\"card\" loading=\"lazy\"/>\n                                        <span>{t(\"cash\")}</span>\n                                    </div>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"cash\"\n                                        checked={PaymentType.payment_type === \"cash\"}\n                                        onChange={(e) => changePaymentType(e.target.value)}\n                                        className=\"w-4 h-4\"\n                                    />\n                                </label>\n                                <label className=\"label-payment\">\n                                    <div className=\"left\">\n                                        <img src=\"./images/card.webp\" alt=\"card\" loading=\"lazy\"/>\n                                        <span>{t(\"card\")}</span>\n                                    </div>\n                                    <input\n                                        type=\"radio\"\n                                        value=\"card\"\n                                        checked={PaymentType.payment_type === \"card\"}\n                                        onChange={(e) => changePaymentType(e.target.value)}\n                                        className=\"w-4 h-4\"\n                                    />\n\n                                </label>\n                            </div>\n\n                            <div onClick={() => {\n                                dispatch(hideModal({show: false}))\n                            }} className=\"send-btn\">\n                                {t(\"success\")}\n                            </div>\n                        </div>\n                    )}\n\n                    {modalContent.status === \"add-other\" && (\n                        <div className=\"add-other\">\n                            <div className=\"header\">\n                                <h1 className=\"title\">\n                                    {t(\"other-order\")}\n                                </h1>\n                                <div className=\"cancel-btn\">\n                                    <img\n                                        onClick={() => {\n                                            dispatch(hideModal({show: false}))\n                                        }}\n                                        src=\"./images/cancel.webp\"\n                                        alt=\"cancel\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-box\">\n                                <label htmlFor=\"phone\">{t(\"phone\")}</label>\n                                <input value={other_clinet_phone}\n                                       onChange={(e) => setOtherClinetPhone(e.target.value)}\n                                       id=\"phone\"\n                                       placeholder={t(\"phone_form\")} type=\"number\"/>\n                            </div>\n                            <div className=\"form-box\">\n                                <label htmlFor=\"name\">{t(\"name\")}</label>\n                                <input value={other_clinet_name} onChange={(e) => setOtherClinetName(e.target.value)}\n                                       id=\"name\" placeholder={t(\"name_add\")} type=\"text\"/>\n                            </div>\n                            <button\n                                onClick={addClient}\n                                disabled={!(other_clinet_phone.trim().length > 0 && other_clinet_name.trim().length > 0)}\n                                className={`send-btn ${!(other_clinet_phone.trim().length > 0 && other_clinet_name.trim().length > 0) ? \"btn-disablet\" : \"\"}`}>\n                                {t(\"success\")}\n                            </button>\n                        </div>\n                    )}\n\n                    {modalContent.status === \"cancel-order\" && (\n                        <div className=\"cancel-order\">\n                            <div className=\"header\">\n                                <h1 className=\"title\">\n                                    {t(\"reason_cancel\")}\n                                </h1>\n                                <div className=\"cancel-btn\">\n                                    <img\n                                        onClick={() => {\n                                            dispatch(hideModal({show: false}))\n                                        }}\n                                        src=\"./images/cancel.webp\"\n                                        alt=\"cancel\"/>\n                                </div>\n                            </div>\n\n                            <div className=\"radio-buttons\">\n                                {reasonList.map((item, index) => {\n                                    return <label key={item.id} className=\"label-payment\">\n                                        <span>{item.translations[i18next.language].name}</span>\n                                        <input\n                                            type=\"radio\"\n                                            value={item.id}\n                                            checked={reason === item.id}\n                                            onChange={() => {\n                                                setReason(item.id)\n                                            }}\n                                        />\n                                    </label>\n                                })}\n\n                                {/*<label className=\"label-payment\">*/}\n                                {/*    <div className=\"input-box\">*/}\n                                {/*        <input onClick={() => setReason(\"6\")}*/}\n                                {/*               placeholder=\"Bekor qilish sababini kiriting...\" type=\"text\"/>*/}\n                                {/*    </div>*/}\n\n                                {/*    <input*/}\n                                {/*        type=\"radio\"*/}\n                                {/*        value=\"6\"*/}\n                                {/*        checked={reason === \"6\"}*/}\n                                {/*        onChange={(e) => setReason(e.target.value)}*/}\n                                {/*    />*/}\n                                {/*</label>*/}\n                            </div>\n\n                            <div onClick={cencelOrder} className=\"send-btn\">\n                                {t(\"success\")}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\nexport default Modal;\n","import {useEffect} from \"react\";\n\nexport const useOnKeyPress = (callback,targetKey) =>{\n    useEffect(()=>{\n        const keyPressHandler = (event)=>{\n            if (event.key === targetKey){\n                callback()\n            }\n        };\n\n        window.addEventListener('keydown',keyPressHandler);\n        return () =>{\n            window.removeEventListener('keydown', keyPressHandler)\n        }\n    },[callback, targetKey]);\n};","import \"./style.scss\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {delAlert} from \"../../redux/AlertsBox\"\n\nconst Alerts = () => {\n    const dispatch = useDispatch()\n    const Alerts = useSelector((store) => store.Alerts.data)\n    const delAlerts = (id) => {\n        dispatch(delAlert(id))\n    }\n\n    return <div className=\"alerts-container\">\n\n        {\n            Alerts.length > 0 && <div className={`alerts-box ${Alerts.length > 3 ? \"alerts-box-hide\" : \"\"}`}>\n                {Alerts.map((item, index) => {\n                    return <div style={{\n                        borderTop: `4px solid ${item.color === \"#EDFFFA\" ? \"#5b9f68\": \"#dd495f\"}`,\n                        background:item.color\n                    }} key={index} className=\"alert\">\n                        <div className=\"left-side\">\n                            <img src={item.img} alt=\"\"/>\n                        </div>\n                        <div className=\"right-side\">\n                            {item.text}\n                        </div>\n                        <div className=\"xbtn\">\n                            <img onClick={() => delAlerts(item.id)} src=\"./images/x-button.png\" alt=\"\"/>\n                        </div>\n                    </div>\n                })}\n            </div>\n        }\n\n    </div>\n}\n\nexport default Alerts","import {useRef, useState, useMemo, useEffect} from \"react\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport axios from \"axios\";\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\nimport i18next from \"i18next\";\nimport {GOOGLE_MAPS_API_KEY} from \"./googleMapsApi\";\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\nimport {updateDropLocationPickUp} from \"../../redux/PickUpLocations\";\nimport {updateDropLocationDrop} from \"../../redux/DropOffLocations\";\nimport {useTranslation} from \"react-i18next\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport \"@reach/combobox/styles.css\";\nimport Loader from \"../loader/Loader\";\nimport \"./style.scss\";\nimport {ShowHideModal} from \"../../redux/GetLocations\";\n\nconst libraries = [\"places\"];\n\nconst GetLocation = () => {\n    const {t} = useTranslation();\n    const nodeRef = useRef(null);\n    const dispatch = useDispatch();\n    const GetLocations = useSelector((store) => store.GetLocations.data);\n    const PickUpLocations = useSelector((store) => store.PickUpLocations.data)\n    const DropOffLocations = useSelector((store) => store.DropOffLocations.data)\n    const [center, setCenter] = useState(null);\n    const [searchLocationAddress, setSearchLocationAddress] = useState(\"\");\n    const [selected, setSelected] = useState(null);\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            let locMy = {lat: latitude, lng: longitude};\n            setCenter(locMy);\n        });\n\n        if (GetLocations.location_status === \"pick_up\") {\n            if (PickUpLocations[GetLocations.location_num].address) {\n                let locMy = {\n                    lat: PickUpLocations[GetLocations.location_num].latitude,\n                    lng: PickUpLocations[GetLocations.location_num].longitude\n                };\n                setCenter(locMy);\n                setSelected(locMy)\n                setSearchLocationAddress(PickUpLocations[GetLocations.location_num].address)\n            } else {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    const {latitude, longitude} = position.coords;\n                    let locMy = {lat: latitude, lng: longitude};\n                    setCenter(locMy);\n                });\n            }\n        }\n\n        if (GetLocations.location_status === \"drop_off\") {\n            if (DropOffLocations[GetLocations.location_num].address) {\n                let locMy = {\n                    lat: DropOffLocations[GetLocations.location_num].latitude,\n                    lng: DropOffLocations[GetLocations.location_num].longitude\n                };\n                setCenter(locMy);\n                setSelected(locMy)\n                setSearchLocationAddress(DropOffLocations[GetLocations.location_num].address)\n            } else {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    const {latitude, longitude} = position.coords;\n                    let locMy = {lat: latitude, lng: longitude};\n                    setCenter(locMy);\n                });\n            }\n        }\n\n    }, [GetLocations.show === true]);\n\n    const selectAddressIcon = {\n        url: \"./images/address.png\",\n        scaledSize: {width: 40, height: 50},\n    };\n\n    const PlacesAutocomplete = ({setSelected}) => {\n        const {\n            ready,\n            value,\n            setValue,\n            suggestions: {status, data},\n            clearSuggestions,\n        } = usePlacesAutocomplete({\n            requestOptions: {\n                language: i18next.language,\n            },\n        });\n\n        const handleSelect = async (address) => {\n            const results = await getGeocode({address});\n            const {lat, lng} = await getLatLng(results[0]);\n            let locMy = {lat, lng};\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\n\n            axios.get(`${url}`, {\n                    headers: {\n                        \"Accept-Language\": i18next.language,\n                    },\n                }).then((res) => {\n                    let city = res.data.address.city;\n                    let suburb = res.data.address.suburb;\n                    let neighbourhood = res.data.address.neighbourhood;\n                    let county = res.data.address.county;\n                    let road = res.data.address.road;\n                    let fullAddress = `${\n                        city ? city + \",\" : \"\"\n                    } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                        county ? county + \",\" : \"\"\n                    } ${road ? road : \"\"}`;\n\n                    if (res.data.address.country_code === \"uz\") {\n                        if (GetLocations.location_status === \"pick_up\") {\n                            setSearchLocationAddress(fullAddress);\n                            setSelected(locMy);\n                            setCenter({lat, lng});\n                            setValue(address, false);\n                            clearSuggestions();\n                        } else if (GetLocations.location_status === \"drop_off\") {\n                            setSearchLocationAddress(fullAddress);\n                            setSelected(locMy);\n                            setCenter({lat, lng});\n                            setValue(address, false);\n                            clearSuggestions();\n                        }\n\n                    } else {\n                        let idAlert = Date.now();\n                        let alert = {\n                            id: idAlert,\n                            text: t(\"errorLocations\"),\n                            img: \"./images/red.svg\",\n                            color: \"#FFEDF1\",\n                        };\n                        dispatch(addAlert(alert));\n                        setTimeout(() => {\n                            dispatch(delAlert(idAlert));\n                        }, 5000);\n                    }\n\n\n                });\n        };\n\n        return (\n            <Combobox onSelect={handleSelect}>\n                <ComboboxInput\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    disabled={!ready}\n                    className=\"combobox-input\"\n                    placeholder={t(\"input1\")}\n                />\n\n                <div className=\"address-wrapper\">\n                    <div className=\"list-address\">\n                        {status === \"OK\" &&\n                            data.map(({place_id, description}) => (\n                                <ComboboxOption key={place_id} value={description}/>\n                            ))}\n                    </div>\n                </div>\n            </Combobox>\n        );\n    };\n    const ClicklLocation = (e) => {\n        let latitude = e.latLng.lat();\n        let longitude = e.latLng.lng();\n\n        let locMy = {lat: latitude, lng: longitude};\n\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n\n        axios\n            .get(`${url}`, {\n                headers: {\n                    \"Accept-Language\": i18next.language,\n                },\n            })\n            .then((res) => {\n                let city = res.data.address.city;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n\n                if (res.data.address.country_code === \"uz\") {\n                    if (GetLocations.location_status === \"pick_up\") {\n                        setSearchLocationAddress(fullAddress);\n                        setSelected(locMy);\n                    } else if (GetLocations.location_status === \"drop_off\") {\n                        setSearchLocationAddress(fullAddress);\n                        setSelected(locMy);\n                    }\n                } else {\n                    let idAlert = Date.now();\n                    let alert = {\n                        id: idAlert,\n                        text: t(\"errorLocations\"),\n                        img: \"./images/red.svg\",\n                        color: \"#FFEDF1\",\n                    };\n                    dispatch(addAlert(alert));\n                    setTimeout(() => {\n                        dispatch(delAlert(idAlert));\n                    }, 5000);\n                }\n\n\n            });\n    };\n    const getAddressLocation = () => {\n        if (GetLocations.location_status === \"pick_up\") {\n            if (searchLocationAddress && selected) {\n                dispatch(updateDropLocationPickUp({\n                    index: Number(GetLocations.location_num),\n                    newData: {\n                        address: searchLocationAddress,\n                        latitude: Number(selected.lat.toString().slice(0, 9)),\n                        longitude: Number(selected.lng.toString().slice(0, 9))\n                    }\n                }));\n                dispatch(ShowHideModal({show: false}))\n                setSelected(null);\n                setSearchLocationAddress(\"\")\n            } else {\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert,\n                    text: t(\"alert7\"),\n                    img: \"./images/red.svg\",\n                    color: \"#FFEDF1\",\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n            }\n        }\n        if (GetLocations.location_status === \"drop_off\") {\n            if (searchLocationAddress && selected) {\n                dispatch(updateDropLocationDrop({\n                    index: Number(GetLocations.location_num),\n                    newData: {\n                        address: searchLocationAddress,\n                        latitude: Number(selected.lat.toString().slice(0, 9)),\n                        longitude: Number(selected.lng.toString().slice(0, 9))\n                    }\n                }));\n                dispatch(ShowHideModal({show: false}))\n                setSelected(null);\n                setSearchLocationAddress(\"\")\n            } else {\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert,\n                    text: t(\"alert7\"),\n                    img: \"./images/red.svg\",\n                    color: \"#FFEDF1\",\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n            }\n        }\n    };\n\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: false,\n            clickableIcons: false,\n        }),\n        []\n    );\n\n    if (!isLoaded) return <Loader/>;\n    return (\n        <CSSTransition\n            in={GetLocations.show}\n            nodeRef={nodeRef}\n            timeout={300}\n            classNames=\"alert\"\n            unmountOnExit\n        >\n            <div\n                className=\"modal-sloy\">\n                <div ref={nodeRef} className=\"modal-card\">\n                    <div className=\"add-location\">\n                        <div className=\"header\">\n                            <h1 className=\"title\">\n                                {t(\"choose_location\")}\n                            </h1>\n                            <div className=\"cancel-btn\">\n                                <img\n                                    onClick={() => {\n                                        dispatch(ShowHideModal({show: false}))\n                                    }}\n                                    src=\"./images/cancel.webp\"\n                                    alt=\"cancel\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"map-box\">\n                            <GoogleMap\n                                zoom={10}\n                                center={center}\n                                options={options}\n                                onClick={ClicklLocation}\n                                mapContainerClassName=\"map\"\n                            >\n                                {selected && (\n                                    <Marker icon={selectAddressIcon} position={selected}/>\n                                )}\n                                <div className=\"search-address\">\n                                    <div className=\"places-container\">\n                                        <PlacesAutocomplete setSelected={setSelected}/>\n                                        <img src=\"./images/search.png\" alt=\"\"/>\n                                    </div>\n                                </div>\n                            </GoogleMap>\n                        </div>\n\n                        <div onClick={getAddressLocation} className=\"send-btn\">\n                            {t(\"success\")}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\nexport default GetLocation;\n","export const GOOGLE_MAPS_API_KEY = 'AIzaSyBEN2azIRg6YCHa-tV8yAEUJoHsn__fRBM'","import React, {useState, useEffect, createContext, useRef} from \"react\";\nimport {Routes, Route} from \"react-router-dom\";\nimport NotFound from \"../notFound/NotFound\";\nimport {MainRoutes} from \"../../routes/Routes\";\nimport Modal from \"../modal/Modal\";\nimport Alerts from \"../alerts/Alerts\";\nimport GetLocation from \"../get-location/GetLocation\";\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\nimport {useTranslation} from \"react-i18next\";\nimport {changeLocation} from \"../../redux/DriverLocation\";\nimport {setPageNumber} from \"../../redux/OrderPage\";\nimport {AddClientInfo} from \"../../redux/AddClient\";\nimport {clearDropOffLocations} from \"../../redux/DropOffLocations\";\nimport {clearPickUpLocations} from \"../../redux/PickUpLocations\";\nimport {hideModal} from \"../../redux/ModalContent\";\nimport axios from \"axios\";\nimport {getOrder} from \"../../redux/ActiveOrders\";\nimport success from \"./sound/success.wav\";\n\nexport const webSockedContext = createContext();\n\nconst App = () => {\n    const baseUrl = useSelector(store => store.baseUrl.data);\n    const {t} = useTranslation();\n    const dispatch = useDispatch();\n    const [sockedContext, setSockedContext] = useState(null);\n    const audioRef = useRef(null);\n\n    // const successAudio = () => new Audio(success).play();\n\n    useEffect(() => {\n        if (!localStorage.getItem(\"token\")) return;\n\n        const websocket = new W3CWebSocket(`wss://api.adataxi.uz/ws/client/?token=${localStorage.getItem(\"token\")}`);\n        setSockedContext(websocket);\n\n        const idAlertError = Date.now();\n        const netErrorAlert = {\n            id: idAlertError,\n            text: t(\"net\"),\n            img: \"./images/red.svg\",\n            color: \"#FFEDF1\"\n        };\n\n        websocket.onclose = websocket.onerror = () => {\n            dispatch(addAlert(netErrorAlert));\n            setTimeout(() => window.location.reload(), 2000);\n        };\n\n        websocket.onopen = () => {\n            dispatch(delAlert(idAlertError));\n        };\n\n        audioRef.current = new Audio(success);\n    }, []);\n\n    useEffect(() => {\n        if (!sockedContext) return;\n\n        const handleAlert = (textKey) => {\n            const id = Date.now();\n            dispatch(addAlert({id, text: t(textKey), img: \"./images/green.svg\", color: \"#EDFFFA\"}));\n            setTimeout(() => dispatch(delAlert(id)), 5000);\n            successAudio();\n        };\n\n        sockedContext.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n\n            if (data.message?.code === -35) {\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"userId\");\n                window.location.pathname = \"/\";\n                return;\n            }\n\n            switch (data.action) {\n                case \"order_accepted\":\n                    handleAlert(\"order_accepted\");\n                    getActiveOrders();\n                    break;\n                case \"arrived\":\n                    handleAlert(\"arrived\");\n                    break;\n                case \"order_started\":\n                    handleAlert(\"order_started\");\n                    dispatch(setPageNumber(5));\n                    break;\n                case \"trip_started\":\n                    handleAlert(\"trip_started\");\n                    break;\n                case \"order_finished\":\n                    dispatch(setPageNumber(0));\n                    dispatch(changeLocation({}));\n                    dispatch(AddClientInfo({name: \"\", phone: \"\"}));\n                    dispatch(clearDropOffLocations());\n                    dispatch(clearPickUpLocations());\n                    handleAlert(\"order_finished\");\n                    break;\n                default:\n                    break;\n            }\n\n            if (data.action === \"reject_order\") {\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert, text: t(\"alert_cancel\"), img: \"./images/green.svg\", color: \"#EDFFFA\"\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n                dispatch(hideModal({show: false}))\n                dispatch(setPageNumber(0))\n                dispatch(changeLocation({}))\n                dispatch(AddClientInfo({name: \"\", phone: \"\",}))\n                dispatch(clearDropOffLocations())\n                dispatch(clearPickUpLocations())\n                successAudio()\n            }\n\n            if (data.action === \"driver_location\") {\n                dispatch(changeLocation(data.message))\n            }\n        };\n    }, [sockedContext]);\n\n    const successAudio = () => {\n        audioRef.current?.play().catch(() => {});\n    };\n\n    const getActiveOrders = () => {\n        if (!localStorage.getItem(\"token\")) return;\n\n        axios.get(`${baseUrl}/api/v1/client-active-orders/`, {\n            headers: {Authorization: `Token ${localStorage.getItem(\"token\")}`}\n        }).then((res) => {\n            const order = res.data[0];\n            if (!order) return;\n\n            dispatch(getOrder(order));\n            if (order.driver) {\n                dispatch(setPageNumber(order.status === \"started\" ? 5 : 4));\n            } else {\n                dispatch(setPageNumber(3));\n            }\n        });\n    };\n\n    const cencelOrder = (id, reason) => {\n        if (!sockedContext) {\n            const id = Date.now();\n            dispatch(addAlert({\n                id,\n                text: t(\"net\"),\n                img: \"./images/red.svg\",\n                color: \"#FFEDF1\"\n            }));\n            return;\n        }\n\n        sockedContext.send(JSON.stringify({\n            command: \"reject_order\",\n            order_id: id,\n            reason_id: reason\n        }));\n    };\n\n    return (\n        <webSockedContext.Provider value={cencelOrder}>\n            <Modal/>\n            <Alerts/>\n            <GetLocation/>\n            <Routes>\n                {MainRoutes.map((route, i) => <Route key={i} {...route} />)}\n                <Route path='*' element={<NotFound/>}/>\n            </Routes>\n        </webSockedContext.Provider>\n    );\n};\n\nexport default App;\n"],"names":["NotFound","t","useTranslation","_jsx","className","children","_jsxs","Header","baseUrl","useSelector","store","data","navigate","useNavigate","dispatch","useDispatch","client","setClient","useState","language","code","name","country_code","showModalContent","status","showModals","show","useEffect","localStorage","getItem","axios","get","concat","headers","then","response","catch","error","removeItem","onClick","src","alt","loading","Dropdown","Toggle","variant","id","map","item","index","i18next","Menu","_ref","Item","setItem","changeLanguage","profile_image","first_name","last_name","phone","Order","webSocked","useContext","webSockedContext","orderPage","OrderPage","active_order","ActiveOrders","progress","setProgress","PickUpLocations","DropOffLocations","PaymentType","OtherClients","AddClient","client_count","setClient_count","raidCount","setRaidCount","showRete","setShowRete","dots","setDots","direction","active_direction","setActive_direction","price_list","setPrice_list","active_price","setActive_price","comment_driver","setComment_driver","services","setServices","active_service","setActive_service","all_seats","setAllSeats","pick_up_date","setPick_up_date","pick_up_time","setPick_up_time","sender_phone","setsender_phone","receiver_phone","setReceiverPhone","payer","setPayer","getPrice","getActiveOrders","getData","interval","setInterval","prev","length","clearInterval","onmessage","event","JSON","parse","action","getOrder","driver","setPageNumber","rated","addLocation","location","newLocation","address","latitude","longitude","number","addLocations","addLocationsDrop","delLocation","indexToDelete","delLocations","delLocationsDrop","toggleService","includes","filter","price_info","service","from_region","to_region","passanger_count","book_all_seats","extra_services","getLocations","location_num","arguments","undefined","location_status","ShowHideModal","post","rateDriver","order","rate","idAlert","Date","now","alert","text","img","color","addAlert","setTimeout","delAlert","Audio","success","play","category","icon","translations","cost","onChange","e","target","value","placeholder","type","payment_type","delClient","AddClientInfo","isActive","is_main","price","idAlertError","pick_up_locations","drop_off_locations","car_service","car_category","_Fragment","car_color","car_make","car_model","car_number","slice","finished_orders_count","href","item_loc","index_loc","ReactStars","count","size","color2","half","prevState","SendOrder","allInfo","end_date","comment_to_driver","clearPickUpLocations","clearDropOffLocations","success2","libraries","Dashboard","isMobile","useMediaQuery","DriverLocation","showModal","setShowModal","center","setCenter","modalContent","ModalContent","nodeRef","useRef","history","setHistory","order_info","setOrder_info","navigator","geolocation","getCurrentPosition","position","coords","lat","lng","isLoaded","useLoadScript","googleMapsApiKey","options","useMemo","disableDefaultUI","clickableIcons","CSSTransition","in","timeout","classNames","unmountOnExit","ref","hideModal","created_at","split","GoogleMap","zoom","mapContainerClassName","MarkerF","url","scaledSize","width","height","Loader","Profile","profile_info","setProfileInfo","EditProfile","setProfileImage","imagePreview","setImagePreview","setFirstName","setLastName","gender","setGender","file","files","URL","createObjectURL","saveProfile","formData","FormData","key","append","MainRoutes","path","element","Modal","setPhone","setCode","checkCode","setCheckCode","minutes","setMinutes","seconds","setSeconds","reason","setReason","reasonList","setReasonList","other_clinet_phone","setOtherClinetPhone","other_clinet_name","setOtherClinetName","HandleLogin","user","role","user_id","CheckCode","token","window","pathname","changePaymentType","payment","changePayment","useOnKeyPress","callback","targetKey","keyPressHandler","addEventListener","removeEventListener","logOut","reload","PhoneInput","international","defaultCountry","disabled","AuthCode","allowedCharacters","trim","checked","htmlFor","addClient","cencelOrder","Alerts","style","borderTop","background","delAlerts","GetLocation","GetLocations","searchLocationAddress","setSearchLocationAddress","selected","setSelected","locMy","PlacesAutocomplete","ready","setValue","suggestions","clearSuggestions","usePlacesAutocomplete","requestOptions","Combobox","onSelect","async","results","getGeocode","getLatLng","res","city","suburb","neighbourhood","county","road","fullAddress","ComboboxInput","_ref2","place_id","description","ComboboxOption","latLng","Marker","getAddressLocation","updateDropLocationPickUp","Number","newData","toString","updateDropLocationDrop","createContext","App","sockedContext","setSockedContext","audioRef","websocket","W3CWebSocket","netErrorAlert","onclose","onerror","onopen","current","handleAlert","textKey","successAudio","_data$message","message","changeLocation","_audioRef$current","Authorization","Provider","send","stringify","command","order_id","reason_id","Routes","route","i","Route","_objectSpread"],"sourceRoot":""}